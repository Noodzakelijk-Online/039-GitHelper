{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aruat\\\\OneDrive\\\\Desktop\\\\git-Drag-Drop\\\\browser-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Octokit } from '@octokit/rest';\nimport { createOAuthAppAuth } from '@octokit/auth-oauth-app';\n\n// GitHub OAuth App credentials would normally be stored securely\n// For demo purposes, we're using placeholder values\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GITHUB_CLIENT_ID = 'Ov23liar9wjLDWrJz1Lx';\nconst GITHUB_CLIENT_SECRET = '501fe2d9197171e5130909d0794f1eb08d57298f';\nconst App = () => {\n  _s();\n  const [authenticated, setAuthenticated] = useState(false);\n  const [octokit, setOctokit] = useState(null);\n  const [user, setUser] = useState(null);\n  const [repositories, setRepositories] = useState([]);\n  const [selectedRepo, setSelectedRepo] = useState(null);\n  const [currentPath, setCurrentPath] = useState('/');\n  const [contents, setContents] = useState([]);\n  const [branches, setBranches] = useState([]);\n  const [currentBranch, setCurrentBranch] = useState('main');\n  const [commitMessage, setCommitMessage] = useState('');\n  const [notification, setNotification] = useState(null);\n  const [uploadFiles, setUploadFiles] = useState([]);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n\n  // Initialize GitHub OAuth\n  const initializeGitHub = async () => {\n    try {\n      // In a real application, we would implement proper OAuth flow\n      // For demo purposes, we're using a simplified approach\n\n      // Check if we have a token in localStorage\n      const token = localStorage.getItem('github_token');\n      if (token) {\n        const auth = createOAuthAppAuth({\n          clientId: GITHUB_CLIENT_ID,\n          clientSecret: GITHUB_CLIENT_SECRET\n        });\n        const octokitInstance = new Octokit({\n          auth: token\n        });\n        setOctokit(octokitInstance);\n\n        // Get authenticated user\n        const {\n          data: userData\n        } = await octokitInstance.users.getAuthenticated();\n        setUser(userData);\n        setAuthenticated(true);\n\n        // Load user repositories\n        await loadUserRepositories(octokitInstance);\n      }\n    } catch (error) {\n      console.error('Authentication error:', error);\n      localStorage.removeItem('github_token');\n      setAuthenticated(false);\n    }\n  };\n\n  // Load user repositories\n  const loadUserRepositories = async octokitInstance => {\n    try {\n      const {\n        data: repos\n      } = await octokitInstance.repos.listForAuthenticatedUser({\n        sort: 'updated',\n        per_page: 100\n      });\n      setRepositories(repos);\n    } catch (error) {\n      console.error('Error loading repositories:', error);\n      showNotification('error', 'Failed to load repositories');\n    }\n  };\n\n  // Load repository contents\n  const loadRepositoryContents = async (repo, path = '', branch = 'main') => {\n    if (!octokit || !repo) return;\n    try {\n      const {\n        data: contentsData\n      } = await octokit.repos.getContent({\n        owner: repo.owner.login,\n        repo: repo.name,\n        path: path || '',\n        ref: branch\n      });\n      setContents(Array.isArray(contentsData) ? contentsData : [contentsData]);\n      setCurrentPath(path || '/');\n\n      // Also load branches\n      const {\n        data: branchesData\n      } = await octokit.repos.listBranches({\n        owner: repo.owner.login,\n        repo: repo.name\n      });\n      setBranches(branchesData.map(b => b.name));\n      setCurrentBranch(branch);\n    } catch (error) {\n      console.error('Error loading repository contents:', error);\n      showNotification('error', 'Failed to load repository contents');\n    }\n  };\n\n  // Handle repository selection\n  const handleSelectRepository = async repo => {\n    setSelectedRepo(repo);\n    await loadRepositoryContents(repo);\n  };\n\n  // Handle branch selection\n  const handleSelectBranch = async branch => {\n    if (selectedRepo) {\n      await loadRepositoryContents(selectedRepo, currentPath, branch);\n    }\n  };\n\n  // Handle directory navigation\n  const handleNavigate = async item => {\n    if (item.type === 'dir') {\n      await loadRepositoryContents(selectedRepo, item.path, currentBranch);\n    } else {\n      // View file content\n      try {\n        const {\n          data: fileData\n        } = await octokit.repos.getContent({\n          owner: selectedRepo.owner.login,\n          repo: selectedRepo.name,\n          path: item.path,\n          ref: currentBranch\n        });\n\n        // For binary files, fileData.content will be base64 encoded\n        // For text files, we can decode and display\n        if (fileData.encoding === 'base64' && !isImageFile(fileData.name)) {\n          const content = atob(fileData.content);\n          // Here you would display the file content in a modal or viewer\n          console.log('File content:', content);\n        } else if (isImageFile(fileData.name)) {\n          // Handle image files\n          const imageUrl = `data:image/png;base64,${fileData.content}`;\n          // Display image in a modal or viewer\n          console.log('Image URL:', imageUrl);\n        }\n      } catch (error) {\n        console.error('Error loading file content:', error);\n        showNotification('error', 'Failed to load file content');\n      }\n    }\n  };\n\n  // Check if file is an image\n  const isImageFile = filename => {\n    const imageExtensions = ['.png', '.jpg', '.jpeg', '.gif', '.svg', '.webp'];\n    return imageExtensions.some(ext => filename.toLowerCase().endsWith(ext));\n  };\n\n  // Handle file upload via drag and drop\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!authenticated || !selectedRepo) {\n      showNotification('error', 'Please select a repository first');\n      return;\n    }\n    const files = [];\n    if (e.dataTransfer.items) {\n      for (let i = 0; i < e.dataTransfer.items.length; i++) {\n        if (e.dataTransfer.items[i].kind === 'file') {\n          const file = e.dataTransfer.items[i].getAsFile();\n          files.push(file);\n        }\n      }\n    } else {\n      for (let i = 0; i < e.dataTransfer.files.length; i++) {\n        files.push(e.dataTransfer.files[i]);\n      }\n    }\n    if (files.length > 0) {\n      setUploadFiles(files);\n      setShowUploadModal(true);\n    }\n  };\n\n  // Handle drag over\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  // Handle file upload and commit\n  const handleUploadFiles = async () => {\n    if (!commitMessage.trim()) {\n      showNotification('error', 'Please enter a commit message');\n      return;\n    }\n    try {\n      // Get the latest commit SHA for the branch\n      const {\n        data: refData\n      } = await octokit.git.getRef({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        ref: `heads/${currentBranch}`\n      });\n      const latestCommitSha = refData.object.sha;\n\n      // Get the base tree\n      const {\n        data: commitData\n      } = await octokit.git.getCommit({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        commit_sha: latestCommitSha\n      });\n      const baseTreeSha = commitData.tree.sha;\n\n      // Create blobs for each file\n      const fileBlobs = await Promise.all(uploadFiles.map(async file => {\n        // Read file content\n        const content = await readFileAsBase64(file);\n\n        // Create blob\n        const {\n          data: blobData\n        } = await octokit.git.createBlob({\n          owner: selectedRepo.owner.login,\n          repo: selectedRepo.name,\n          content: content,\n          encoding: 'base64'\n        });\n        return {\n          path: currentPath === '/' ? file.name : `${currentPath}/${file.name}`,\n          mode: '100644',\n          // Regular file\n          type: 'blob',\n          sha: blobData.sha\n        };\n      }));\n\n      // Create tree\n      const {\n        data: treeData\n      } = await octokit.git.createTree({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        base_tree: baseTreeSha,\n        tree: fileBlobs\n      });\n\n      // Create commit\n      const {\n        data: newCommitData\n      } = await octokit.git.createCommit({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        message: commitMessage,\n        tree: treeData.sha,\n        parents: [latestCommitSha]\n      });\n\n      // Update branch reference\n      await octokit.git.updateRef({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        ref: `heads/${currentBranch}`,\n        sha: newCommitData.sha\n      });\n\n      // Refresh contents\n      await loadRepositoryContents(selectedRepo, currentPath, currentBranch);\n\n      // Close modal and clear state\n      setShowUploadModal(false);\n      setUploadFiles([]);\n      setCommitMessage('');\n      showNotification('success', `Successfully uploaded ${uploadFiles.length} file(s)`);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      showNotification('error', 'Failed to upload files');\n    }\n  };\n\n  // Read file as base64\n  const readFileAsBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        // Remove the data URL prefix (e.g., \"data:application/pdf;base64,\")\n        const base64 = reader.result.split(',')[1];\n        resolve(base64);\n      };\n      reader.onerror = error => reject(error);\n    });\n  };\n\n  // Show notification\n  const showNotification = (type, message) => {\n    setNotification({\n      type,\n      message\n    });\n    setTimeout(() => setNotification(null), 5000);\n  };\n\n  // Handle login\n  const handleLogin = () => {\n    // In a real application, we would redirect to GitHub OAuth flow\n    // For demo purposes, we're using a simplified approach\n    const token = prompt('Enter your GitHub token:');\n    if (token) {\n      localStorage.setItem('github_token', token);\n      initializeGitHub();\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('github_token');\n    setAuthenticated(false);\n    setUser(null);\n    setRepositories([]);\n    setSelectedRepo(null);\n    setContents([]);\n  };\n\n  // Initialize on component mount\n  useEffect(() => {\n    initializeGitHub();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Git Helper Web\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), authenticated ? /*#__PURE__*/_jsxDEV(UserInfo, {\n        children: user && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(UserAvatar, {\n            src: user.avatar_url,\n            alt: user.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(UserName, {\n            children: user.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(LoginButton, {\n        onClick: handleLogin,\n        children: \"Login with GitHub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), authenticated ? /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        children: [/*#__PURE__*/_jsxDEV(SidebarHeader, {\n          children: \"Repositories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RepoList, {\n          children: repositories.map(repo => /*#__PURE__*/_jsxDEV(RepoItem, {\n            selected: selectedRepo && selectedRepo.id === repo.id,\n            onClick: () => handleSelectRepository(repo),\n            children: repo.name\n          }, repo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        children: selectedRepo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(RepositoryHeader, {\n            children: [/*#__PURE__*/_jsxDEV(RepoName, {\n              children: selectedRepo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(BranchSelector, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Branch:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: currentBranch,\n                onChange: e => handleSelectBranch(e.target.value),\n                children: branches.map(branch => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: branch,\n                  children: branch\n                }, branch, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(PathNavigator, {\n            children: [/*#__PURE__*/_jsxDEV(PathItem, {\n              onClick: () => loadRepositoryContents(selectedRepo, '', currentBranch),\n              children: \"Root\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 19\n            }, this), currentPath !== '/' && currentPath.split('/').filter(Boolean).map((part, index, array) => {\n              const path = array.slice(0, index + 1).join('/');\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(PathSeparator, {\n                  children: \"/\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(PathItem, {\n                  onClick: () => loadRepositoryContents(selectedRepo, path, currentBranch),\n                  children: part\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 25\n                }, this)]\n              }, path, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 23\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FileExplorer, {\n            children: contents.map(item => /*#__PURE__*/_jsxDEV(FileItem, {\n              onClick: () => handleNavigate(item),\n              children: [/*#__PURE__*/_jsxDEV(FileIcon, {\n                children: item.type === 'dir' ? '📁' : '📄'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(FileName, {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 23\n              }, this)]\n            }, item.sha, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DropZone, {\n            onDragOver: handleDragOver,\n            onDrop: handleDrop,\n            children: /*#__PURE__*/_jsxDEV(DropZoneText, {\n              children: \"Drop files here to upload to current directory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(WelcomeMessage, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Welcome to Git Helper Web\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a repository to get started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WelcomeMessage, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to Git Helper Web\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please login with GitHub to get started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n        onClick: handleLogin,\n        children: \"Login with GitHub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 9\n    }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n      type: notification.type,\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 9\n    }, this), showUploadModal && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upload Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n            onClick: () => setShowUploadModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Files to upload:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FileList, {\n            children: uploadFiles.map((file, index) => /*#__PURE__*/_jsxDEV(FileListItem, {\n              children: [file.name, \" (\", (file.size / 1024).toFixed(2), \" KB)\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CommitMessageInput, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Commit message:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: commitMessage,\n              onChange: e => setCommitMessage(e.target.value),\n              placeholder: \"Enter commit message...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(CancelButton, {\n            onClick: () => setShowUploadModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n            onClick: handleUploadFiles,\n            children: \"Commit Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n};\n\n// Styled Components\n_s(App, \"akxIcS7n/dZWatwv3tAmITdfwDU=\");\n_c = App;\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n`;\n_c2 = AppContainer;\nconst Header = styled.header`\n  background-color: #24292e;\n  color: white;\n  padding: 16px 24px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c3 = Header;\nconst Title = styled.h1`\n  margin: 0;\n  font-size: 20px;\n`;\n_c4 = Title;\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n_c5 = UserInfo;\nconst UserAvatar = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%\n`;\n_c6 = UserAvatar;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"UserInfo\");\n$RefreshReg$(_c6, \"UserAvatar\");","map":{"version":3,"names":["React","useState","useEffect","styled","Octokit","createOAuthAppAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","App","_s","authenticated","setAuthenticated","octokit","setOctokit","user","setUser","repositories","setRepositories","selectedRepo","setSelectedRepo","currentPath","setCurrentPath","contents","setContents","branches","setBranches","currentBranch","setCurrentBranch","commitMessage","setCommitMessage","notification","setNotification","uploadFiles","setUploadFiles","showUploadModal","setShowUploadModal","initializeGitHub","token","localStorage","getItem","auth","clientId","clientSecret","octokitInstance","data","userData","users","getAuthenticated","loadUserRepositories","error","console","removeItem","repos","listForAuthenticatedUser","sort","per_page","showNotification","loadRepositoryContents","repo","path","branch","contentsData","getContent","owner","login","name","ref","Array","isArray","branchesData","listBranches","map","b","handleSelectRepository","handleSelectBranch","handleNavigate","item","type","fileData","encoding","isImageFile","content","atob","log","imageUrl","filename","imageExtensions","some","ext","toLowerCase","endsWith","handleDrop","e","preventDefault","stopPropagation","files","dataTransfer","items","i","length","kind","file","getAsFile","push","handleDragOver","handleUploadFiles","trim","refData","git","getRef","latestCommitSha","object","sha","commitData","getCommit","commit_sha","baseTreeSha","tree","fileBlobs","Promise","all","readFileAsBase64","blobData","createBlob","mode","treeData","createTree","base_tree","newCommitData","createCommit","message","parents","updateRef","resolve","reject","reader","FileReader","readAsDataURL","onload","base64","result","split","onerror","setTimeout","handleLogin","prompt","setItem","handleLogout","AppContainer","children","Header","Title","fileName","_jsxFileName","lineNumber","columnNumber","UserInfo","UserAvatar","src","avatar_url","alt","UserName","LogoutButton","onClick","LoginButton","MainContent","Sidebar","SidebarHeader","RepoList","RepoItem","selected","id","Content","RepositoryHeader","RepoName","BranchSelector","value","onChange","target","PathNavigator","PathItem","filter","Boolean","part","index","array","slice","join","PathSeparator","FileExplorer","FileItem","FileIcon","FileName","DropZone","onDragOver","onDrop","DropZoneText","WelcomeMessage","Notification","Modal","ModalContent","ModalHeader","CloseButton","ModalBody","FileList","FileListItem","size","toFixed","CommitMessageInput","placeholder","ModalFooter","CancelButton","UploadButton","_c","div","_c2","header","_c3","h1","_c4","_c5","img","_c6","$RefreshReg$"],"sources":["C:/Users/aruat/OneDrive/Desktop/git-Drag-Drop/browser-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Octokit } from '@octokit/rest';\r\nimport { createOAuthAppAuth } from '@octokit/auth-oauth-app';\r\n\r\n// GitHub OAuth App credentials would normally be stored securely\r\n// For demo purposes, we're using placeholder values\r\nconst GITHUB_CLIENT_ID = 'Ov23liar9wjLDWrJz1Lx';\r\nconst GITHUB_CLIENT_SECRET = '501fe2d9197171e5130909d0794f1eb08d57298f';\r\n\r\nconst App = () => {\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  const [octokit, setOctokit] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [repositories, setRepositories] = useState([]);\r\n  const [selectedRepo, setSelectedRepo] = useState(null);\r\n  const [currentPath, setCurrentPath] = useState('/');\r\n  const [contents, setContents] = useState([]);\r\n  const [branches, setBranches] = useState([]);\r\n  const [currentBranch, setCurrentBranch] = useState('main');\r\n  const [commitMessage, setCommitMessage] = useState('');\r\n  const [notification, setNotification] = useState(null);\r\n  const [uploadFiles, setUploadFiles] = useState([]);\r\n  const [showUploadModal, setShowUploadModal] = useState(false);\r\n\r\n  // Initialize GitHub OAuth\r\n  const initializeGitHub = async () => {\r\n    try {\r\n      // In a real application, we would implement proper OAuth flow\r\n      // For demo purposes, we're using a simplified approach\r\n      \r\n      // Check if we have a token in localStorage\r\n      const token = localStorage.getItem('github_token');\r\n      \r\n      if (token) {\r\n        const auth = createOAuthAppAuth({\r\n          clientId: GITHUB_CLIENT_ID,\r\n          clientSecret: GITHUB_CLIENT_SECRET,\r\n        });\r\n        \r\n        const octokitInstance = new Octokit({\r\n          auth: token\r\n        });\r\n        \r\n        setOctokit(octokitInstance);\r\n        \r\n        // Get authenticated user\r\n        const { data: userData } = await octokitInstance.users.getAuthenticated();\r\n        setUser(userData);\r\n        setAuthenticated(true);\r\n        \r\n        // Load user repositories\r\n        await loadUserRepositories(octokitInstance);\r\n      }\r\n    } catch (error) {\r\n      console.error('Authentication error:', error);\r\n      localStorage.removeItem('github_token');\r\n      setAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  // Load user repositories\r\n  const loadUserRepositories = async (octokitInstance) => {\r\n    try {\r\n      const { data: repos } = await octokitInstance.repos.listForAuthenticatedUser({\r\n        sort: 'updated',\r\n        per_page: 100\r\n      });\r\n      setRepositories(repos);\r\n    } catch (error) {\r\n      console.error('Error loading repositories:', error);\r\n      showNotification('error', 'Failed to load repositories');\r\n    }\r\n  };\r\n\r\n  // Load repository contents\r\n  const loadRepositoryContents = async (repo, path = '', branch = 'main') => {\r\n    if (!octokit || !repo) return;\r\n    \r\n    try {\r\n      const { data: contentsData } = await octokit.repos.getContent({\r\n        owner: repo.owner.login,\r\n        repo: repo.name,\r\n        path: path || '',\r\n        ref: branch\r\n      });\r\n      \r\n      setContents(Array.isArray(contentsData) ? contentsData : [contentsData]);\r\n      setCurrentPath(path || '/');\r\n      \r\n      // Also load branches\r\n      const { data: branchesData } = await octokit.repos.listBranches({\r\n        owner: repo.owner.login,\r\n        repo: repo.name\r\n      });\r\n      \r\n      setBranches(branchesData.map(b => b.name));\r\n      setCurrentBranch(branch);\r\n    } catch (error) {\r\n      console.error('Error loading repository contents:', error);\r\n      showNotification('error', 'Failed to load repository contents');\r\n    }\r\n  };\r\n\r\n  // Handle repository selection\r\n  const handleSelectRepository = async (repo) => {\r\n    setSelectedRepo(repo);\r\n    await loadRepositoryContents(repo);\r\n  };\r\n\r\n  // Handle branch selection\r\n  const handleSelectBranch = async (branch) => {\r\n    if (selectedRepo) {\r\n      await loadRepositoryContents(selectedRepo, currentPath, branch);\r\n    }\r\n  };\r\n\r\n  // Handle directory navigation\r\n  const handleNavigate = async (item) => {\r\n    if (item.type === 'dir') {\r\n      await loadRepositoryContents(selectedRepo, item.path, currentBranch);\r\n    } else {\r\n      // View file content\r\n      try {\r\n        const { data: fileData } = await octokit.repos.getContent({\r\n          owner: selectedRepo.owner.login,\r\n          repo: selectedRepo.name,\r\n          path: item.path,\r\n          ref: currentBranch\r\n        });\r\n        \r\n        // For binary files, fileData.content will be base64 encoded\r\n        // For text files, we can decode and display\r\n        if (fileData.encoding === 'base64' && !isImageFile(fileData.name)) {\r\n          const content = atob(fileData.content);\r\n          // Here you would display the file content in a modal or viewer\r\n          console.log('File content:', content);\r\n        } else if (isImageFile(fileData.name)) {\r\n          // Handle image files\r\n          const imageUrl = `data:image/png;base64,${fileData.content}`;\r\n          // Display image in a modal or viewer\r\n          console.log('Image URL:', imageUrl);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading file content:', error);\r\n        showNotification('error', 'Failed to load file content');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Check if file is an image\r\n  const isImageFile = (filename) => {\r\n    const imageExtensions = ['.png', '.jpg', '.jpeg', '.gif', '.svg', '.webp'];\r\n    return imageExtensions.some(ext => filename.toLowerCase().endsWith(ext));\r\n  };\r\n\r\n  // Handle file upload via drag and drop\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    if (!authenticated || !selectedRepo) {\r\n      showNotification('error', 'Please select a repository first');\r\n      return;\r\n    }\r\n    \r\n    const files = [];\r\n    if (e.dataTransfer.items) {\r\n      for (let i = 0; i < e.dataTransfer.items.length; i++) {\r\n        if (e.dataTransfer.items[i].kind === 'file') {\r\n          const file = e.dataTransfer.items[i].getAsFile();\r\n          files.push(file);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < e.dataTransfer.files.length; i++) {\r\n        files.push(e.dataTransfer.files[i]);\r\n      }\r\n    }\r\n    \r\n    if (files.length > 0) {\r\n      setUploadFiles(files);\r\n      setShowUploadModal(true);\r\n    }\r\n  };\r\n\r\n  // Handle drag over\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n\r\n  // Handle file upload and commit\r\n  const handleUploadFiles = async () => {\r\n    if (!commitMessage.trim()) {\r\n      showNotification('error', 'Please enter a commit message');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Get the latest commit SHA for the branch\r\n      const { data: refData } = await octokit.git.getRef({\r\n        owner: selectedRepo.owner.login,\r\n        repo: selectedRepo.name,\r\n        ref: `heads/${currentBranch}`\r\n      });\r\n      \r\n      const latestCommitSha = refData.object.sha;\r\n      \r\n      // Get the base tree\r\n      const { data: commitData } = await octokit.git.getCommit({\r\n        owner: selectedRepo.owner.login,\r\n        repo: selectedRepo.name,\r\n        commit_sha: latestCommitSha\r\n      });\r\n      \r\n      const baseTreeSha = commitData.tree.sha;\r\n      \r\n      // Create blobs for each file\r\n      const fileBlobs = await Promise.all(uploadFiles.map(async (file) => {\r\n        // Read file content\r\n        const content = await readFileAsBase64(file);\r\n        \r\n        // Create blob\r\n        const { data: blobData } = await octokit.git.createBlob({\r\n          owner: selectedRepo.owner.login,\r\n          repo: selectedRepo.name,\r\n          content: content,\r\n          encoding: 'base64'\r\n        });\r\n        \r\n        return {\r\n          path: currentPath === '/' ? file.name : `${currentPath}/${file.name}`,\r\n          mode: '100644', // Regular file\r\n          type: 'blob',\r\n          sha: blobData.sha\r\n        };\r\n      }));\r\n      \r\n      // Create tree\r\n      const { data: treeData } = await octokit.git.createTree({\r\n        owner: selectedRepo.owner.login,\r\n        repo: selectedRepo.name,\r\n        base_tree: baseTreeSha,\r\n        tree: fileBlobs\r\n      });\r\n      \r\n      // Create commit\r\n      const { data: newCommitData } = await octokit.git.createCommit({\r\n        owner: selectedRepo.owner.login,\r\n        repo: selectedRepo.name,\r\n        message: commitMessage,\r\n        tree: treeData.sha,\r\n        parents: [latestCommitSha]\r\n      });\r\n      \r\n      // Update branch reference\r\n      await octokit.git.updateRef({\r\n        owner: selectedRepo.owner.login,\r\n        repo: selectedRepo.name,\r\n        ref: `heads/${currentBranch}`,\r\n        sha: newCommitData.sha\r\n      });\r\n      \r\n      // Refresh contents\r\n      await loadRepositoryContents(selectedRepo, currentPath, currentBranch);\r\n      \r\n      // Close modal and clear state\r\n      setShowUploadModal(false);\r\n      setUploadFiles([]);\r\n      setCommitMessage('');\r\n      \r\n      showNotification('success', `Successfully uploaded ${uploadFiles.length} file(s)`);\r\n    } catch (error) {\r\n      console.error('Error uploading files:', error);\r\n      showNotification('error', 'Failed to upload files');\r\n    }\r\n  };\r\n\r\n  // Read file as base64\r\n  const readFileAsBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        // Remove the data URL prefix (e.g., \"data:application/pdf;base64,\")\r\n        const base64 = reader.result.split(',')[1];\r\n        resolve(base64);\r\n      };\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  };\r\n\r\n  // Show notification\r\n  const showNotification = (type, message) => {\r\n    setNotification({ type, message });\r\n    setTimeout(() => setNotification(null), 5000);\r\n  };\r\n\r\n  // Handle login\r\n  const handleLogin = () => {\r\n    // In a real application, we would redirect to GitHub OAuth flow\r\n    // For demo purposes, we're using a simplified approach\r\n    const token = prompt('Enter your GitHub token:');\r\n    if (token) {\r\n      localStorage.setItem('github_token', token);\r\n      initializeGitHub();\r\n    }\r\n  };\r\n\r\n  // Handle logout\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('github_token');\r\n    setAuthenticated(false);\r\n    setUser(null);\r\n    setRepositories([]);\r\n    setSelectedRepo(null);\r\n    setContents([]);\r\n  };\r\n\r\n  // Initialize on component mount\r\n  useEffect(() => {\r\n    initializeGitHub();\r\n  }, []);\r\n\r\n  return (\r\n    <AppContainer>\r\n      <Header>\r\n        <Title>Git Helper Web</Title>\r\n        {authenticated ? (\r\n          <UserInfo>\r\n            {user && (\r\n              <>\r\n                <UserAvatar src={user.avatar_url} alt={user.login} />\r\n                <UserName>{user.login}</UserName>\r\n                <LogoutButton onClick={handleLogout}>Logout</LogoutButton>\r\n              </>\r\n            )}\r\n          </UserInfo>\r\n        ) : (\r\n          <LoginButton onClick={handleLogin}>Login with GitHub</LoginButton>\r\n        )}\r\n      </Header>\r\n\r\n      {authenticated ? (\r\n        <MainContent>\r\n          <Sidebar>\r\n            <SidebarHeader>Repositories</SidebarHeader>\r\n            <RepoList>\r\n              {repositories.map(repo => (\r\n                <RepoItem \r\n                  key={repo.id} \r\n                  selected={selectedRepo && selectedRepo.id === repo.id}\r\n                  onClick={() => handleSelectRepository(repo)}\r\n                >\r\n                  {repo.name}\r\n                </RepoItem>\r\n              ))}\r\n            </RepoList>\r\n          </Sidebar>\r\n\r\n          <Content>\r\n            {selectedRepo ? (\r\n              <>\r\n                <RepositoryHeader>\r\n                  <RepoName>{selectedRepo.name}</RepoName>\r\n                  <BranchSelector>\r\n                    <label>Branch:</label>\r\n                    <select \r\n                      value={currentBranch}\r\n                      onChange={(e) => handleSelectBranch(e.target.value)}\r\n                    >\r\n                      {branches.map(branch => (\r\n                        <option key={branch} value={branch}>{branch}</option>\r\n                      ))}\r\n                    </select>\r\n                  </BranchSelector>\r\n                </RepositoryHeader>\r\n\r\n                <PathNavigator>\r\n                  <PathItem onClick={() => loadRepositoryContents(selectedRepo, '', currentBranch)}>\r\n                    Root\r\n                  </PathItem>\r\n                  {currentPath !== '/' && currentPath.split('/').filter(Boolean).map((part, index, array) => {\r\n                    const path = array.slice(0, index + 1).join('/');\r\n                    return (\r\n                      <React.Fragment key={path}>\r\n                        <PathSeparator>/</PathSeparator>\r\n                        <PathItem onClick={() => loadRepositoryContents(selectedRepo, path, currentBranch)}>\r\n                          {part}\r\n                        </PathItem>\r\n                      </React.Fragment>\r\n                    );\r\n                  })}\r\n                </PathNavigator>\r\n\r\n                <FileExplorer>\r\n                  {contents.map(item => (\r\n                    <FileItem \r\n                      key={item.sha} \r\n                      onClick={() => handleNavigate(item)}\r\n                    >\r\n                      <FileIcon>{item.type === 'dir' ? '📁' : '📄'}</FileIcon>\r\n                      <FileName>{item.name}</FileName>\r\n                    </FileItem>\r\n                  ))}\r\n                </FileExplorer>\r\n\r\n                <DropZone\r\n                  onDragOver={handleDragOver}\r\n                  onDrop={handleDrop}\r\n                >\r\n                  <DropZoneText>Drop files here to upload to current directory</DropZoneText>\r\n                </DropZone>\r\n              </>\r\n            ) : (\r\n              <WelcomeMessage>\r\n                <h2>Welcome to Git Helper Web</h2>\r\n                <p>Select a repository to get started</p>\r\n              </WelcomeMessage>\r\n            )}\r\n          </Content>\r\n        </MainContent>\r\n      ) : (\r\n        <WelcomeMessage>\r\n          <h2>Welcome to Git Helper Web</h2>\r\n          <p>Please login with GitHub to get started</p>\r\n          <LoginButton onClick={handleLogin}>Login with GitHub</LoginButton>\r\n        </WelcomeMessage>\r\n      )}\r\n\r\n      {notification && (\r\n        <Notification type={notification.type}>\r\n          {notification.message}\r\n        </Notification>\r\n      )}\r\n\r\n      {showUploadModal && (\r\n        <Modal>\r\n          <ModalContent>\r\n            <ModalHeader>\r\n              <h3>Upload Files</h3>\r\n              <CloseButton onClick={() => setShowUploadModal(false)}>×</CloseButton>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <h4>Files to upload:</h4>\r\n              <FileList>\r\n                {uploadFiles.map((file, index) => (\r\n                  <FileListItem key={index}>\r\n                    {file.name} ({(file.size / 1024).toFixed(2)} KB)\r\n                  </FileListItem>\r\n                ))}\r\n              </FileList>\r\n              <CommitMessageInput>\r\n                <label>Commit message:</label>\r\n                <textarea\r\n                  value={commitMessage}\r\n                  onChange={(e) => setCommitMessage(e.target.value)}\r\n                  placeholder=\"Enter commit message...\"\r\n                />\r\n              </CommitMessageInput>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <CancelButton onClick={() => setShowUploadModal(false)}>Cancel</CancelButton>\r\n              <UploadButton onClick={handleUploadFiles}>Commit Changes</UploadButton>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n    </AppContainer>\r\n  );\r\n};\r\n\r\n// Styled Components\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  background-color: #24292e;\r\n  color: white;\r\n  padding: 16px 24px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin: 0;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n`;\r\n\r\nconst UserAvatar = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%\r\n`;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}