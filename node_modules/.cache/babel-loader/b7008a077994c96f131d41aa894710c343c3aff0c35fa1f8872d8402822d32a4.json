{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aruat\\\\OneDrive\\\\Desktop\\\\git-Drag-Drop\\\\browser-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Octokit } from '@octokit/rest';\nimport { AppContainer, Header, Title, UserInfo, UserName, LoginButton, LogoutButton, MainContent, Sidebar, SidebarHeader, RepoList, RepoItem, Content, RepositoryHeader, RepoName, BranchSelector, PathNavigator, PathItem, PathSeparator, FileExplorer, FileItem, FileIcon, FileName, DropZone, DropZoneText, WelcomeMessage, Notification, Modal, ModalContent, ModalHeader, CloseButton, ModalBody, FileList, FileListItem, CommitMessageInput, ModalFooter, CancelButton, UploadButton } from './styles/StyledComponents';\n\n// GitHub OAuth App credentials would normally be stored securely\n// For demo purposes, we're using placeholder values\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GITHUB_CLIENT_ID = '';\nconst GITHUB_CLIENT_SECRET = 'YOUR_GITHUB_CLIENT_SECRET';\nconst App = () => {\n  _s();\n  // State variables\n  const [authenticated, setAuthenticated] = useState(false);\n  const [octokit, setOctokit] = useState(null);\n  const [user, setUser] = useState(null);\n  const [repositories, setRepositories] = useState([]);\n  const [selectedRepo, setSelectedRepo] = useState(null);\n  const [currentPath, setCurrentPath] = useState('/');\n  const [contents, setContents] = useState([]);\n  const [branches, setBranches] = useState([]);\n  const [currentBranch, setCurrentBranch] = useState('main');\n  const [commitMessage, setCommitMessage] = useState('');\n  const [notification, setNotification] = useState(null);\n  const [uploadFiles, setUploadFiles] = useState([]);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n\n  // Initialize GitHub on component mount\n  useEffect(() => {\n    // Check if we have a token in localStorage\n    const token = localStorage.getItem('github_token');\n    if (token) {\n      initializeGitHub(token);\n    }\n  }, []);\n\n  // Initialize GitHub with token\n  const initializeGitHub = async token => {\n    try {\n      const octokitInstance = new Octokit({\n        auth: token\n      });\n      setOctokit(octokitInstance);\n\n      // Get authenticated user\n      const {\n        data: userData\n      } = await octokitInstance.users.getAuthenticated();\n      setUser(userData);\n      setAuthenticated(true);\n\n      // Load user repositories\n      await loadUserRepositories(octokitInstance);\n      showNotification('success', `Logged in as ${userData.login}`);\n    } catch (error) {\n      console.error('Authentication error:', error);\n      localStorage.removeItem('github_token');\n      setAuthenticated(false);\n      showNotification('error', 'Authentication failed');\n    }\n  };\n\n  // Load user repositories\n  const loadUserRepositories = async octokitInstance => {\n    try {\n      const {\n        data: repos\n      } = await octokitInstance.repos.listForAuthenticatedUser({\n        sort: 'updated',\n        per_page: 100\n      });\n      setRepositories(repos);\n    } catch (error) {\n      console.error('Error loading repositories:', error);\n      showNotification('error', 'Failed to load repositories');\n    }\n  };\n\n  // Load repository contents\n  const loadRepositoryContents = async (repo, path = '', branch = 'main') => {\n    if (!octokit || !repo) return;\n    try {\n      const {\n        data: contentsData\n      } = await octokit.repos.getContent({\n        owner: repo.owner.login,\n        repo: repo.name,\n        path: path || '',\n        ref: branch\n      });\n      setContents(Array.isArray(contentsData) ? contentsData : [contentsData]);\n      setCurrentPath(path || '/');\n\n      // Also load branches\n      const {\n        data: branchesData\n      } = await octokit.repos.listBranches({\n        owner: repo.owner.login,\n        repo: repo.name\n      });\n      setBranches(branchesData.map(b => b.name));\n      setCurrentBranch(branch);\n    } catch (error) {\n      console.error('Error loading repository contents:', error);\n      showNotification('error', 'Failed to load repository contents');\n    }\n  };\n\n  // Handle repository selection\n  const handleSelectRepository = async repo => {\n    setSelectedRepo(repo);\n    await loadRepositoryContents(repo);\n  };\n\n  // Handle branch selection\n  const handleSelectBranch = async branch => {\n    if (selectedRepo) {\n      await loadRepositoryContents(selectedRepo, currentPath, branch);\n    }\n  };\n\n  // Handle directory navigation\n  const handleNavigate = async item => {\n    if (item.type === 'dir') {\n      await loadRepositoryContents(selectedRepo, item.path, currentBranch);\n    } else {\n      // View file content\n      try {\n        const {\n          data: fileData\n        } = await octokit.repos.getContent({\n          owner: selectedRepo.owner.login,\n          repo: selectedRepo.name,\n          path: item.path,\n          ref: currentBranch\n        });\n\n        // For binary files, fileData.content will be base64 encoded\n        // For text files, we can decode and display\n        if (fileData.encoding === 'base64' && !isImageFile(fileData.name)) {\n          const content = atob(fileData.content);\n          // Here you would display the file content in a modal or viewer\n          console.log('File content:', content);\n          showNotification('info', `Viewing file: ${item.name}`);\n        } else if (isImageFile(fileData.name)) {\n          // Handle image files\n          const imageUrl = `data:image/png;base64,${fileData.content}`;\n          // Display image in a modal or viewer\n          console.log('Image URL:', imageUrl);\n          showNotification('info', `Viewing image: ${item.name}`);\n        }\n      } catch (error) {\n        console.error('Error loading file content:', error);\n        showNotification('error', 'Failed to load file content');\n      }\n    }\n  };\n\n  // Check if file is an image\n  const isImageFile = filename => {\n    const imageExtensions = ['.png', '.jpg', '.jpeg', '.gif', '.svg', '.webp'];\n    return imageExtensions.some(ext => filename.toLowerCase().endsWith(ext));\n  };\n\n  // Handle file upload via drag and drop\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!authenticated || !selectedRepo) {\n      showNotification('error', 'Please select a repository first');\n      return;\n    }\n    const files = [];\n    if (e.dataTransfer.items) {\n      for (let i = 0; i < e.dataTransfer.items.length; i++) {\n        if (e.dataTransfer.items[i].kind === 'file') {\n          const file = e.dataTransfer.items[i].getAsFile();\n          files.push(file);\n        }\n      }\n    } else {\n      for (let i = 0; i < e.dataTransfer.files.length; i++) {\n        files.push(e.dataTransfer.files[i]);\n      }\n    }\n    if (files.length > 0) {\n      setUploadFiles(files);\n      setShowUploadModal(true);\n    }\n  };\n\n  // Handle drag over\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  // Handle file upload and commit\n  const handleUploadFiles = async () => {\n    if (!commitMessage.trim()) {\n      showNotification('error', 'Please enter a commit message');\n      return;\n    }\n    try {\n      // Get the latest commit SHA for the branch\n      const {\n        data: refData\n      } = await octokit.git.getRef({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        ref: `heads/${currentBranch}`\n      });\n      const latestCommitSha = refData.object.sha;\n\n      // Get the base tree\n      const {\n        data: commitData\n      } = await octokit.git.getCommit({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        commit_sha: latestCommitSha\n      });\n      const baseTreeSha = commitData.tree.sha;\n\n      // Create blobs for each file\n      const fileBlobs = await Promise.all(uploadFiles.map(async file => {\n        // Read file content\n        const content = await readFileAsBase64(file);\n\n        // Create blob\n        const {\n          data: blobData\n        } = await octokit.git.createBlob({\n          owner: selectedRepo.owner.login,\n          repo: selectedRepo.name,\n          content: content,\n          encoding: 'base64'\n        });\n        return {\n          path: currentPath === '/' ? file.name : `${currentPath}/${file.name}`,\n          mode: '100644',\n          // Regular file\n          type: 'blob',\n          sha: blobData.sha\n        };\n      }));\n\n      // Create tree\n      const {\n        data: treeData\n      } = await octokit.git.createTree({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        base_tree: baseTreeSha,\n        tree: fileBlobs\n      });\n\n      // Create commit\n      const {\n        data: newCommitData\n      } = await octokit.git.createCommit({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        message: commitMessage,\n        tree: treeData.sha,\n        parents: [latestCommitSha]\n      });\n\n      // Update branch reference\n      await octokit.git.updateRef({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        ref: `heads/${currentBranch}`,\n        sha: newCommitData.sha\n      });\n\n      // Refresh contents\n      await loadRepositoryContents(selectedRepo, currentPath, currentBranch);\n\n      // Close modal and clear state\n      setShowUploadModal(false);\n      setUploadFiles([]);\n      setCommitMessage('');\n      showNotification('success', `Successfully uploaded ${uploadFiles.length} file(s)`);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      showNotification('error', 'Failed to upload files');\n    }\n  };\n\n  // Read file as base64\n  // Improved readFileAsBase64 function with better error handling\n  const readFileAsBase64 = file => {\n    return new Promise((resolve, reject) => {\n      try {\n        const reader = new FileReader();\n        reader.onload = () => {\n          try {\n            // Remove the data URL prefix (e.g., \"data:application/pdf;base64,\")\n            const base64 = reader.result.split(',')[1];\n            resolve(base64);\n          } catch (error) {\n            console.error('Error processing file data:', error);\n            reject(error);\n          }\n        };\n        reader.onerror = error => {\n          console.error('FileReader error:', error);\n          reject(error);\n        };\n\n        // Add a timeout in case the read operation hangs\n        setTimeout(() => {\n          if (reader.readyState !== 2) {\n            reject(new Error('FileReader timeout'));\n          }\n        }, 10000);\n        reader.readAsDataURL(file);\n      } catch (error) {\n        console.error('Error setting up FileReader:', error);\n        reject(error);\n      }\n    });\n  };\n\n  // Show notification\n  const showNotification = (type, message) => {\n    setNotification({\n      type,\n      message\n    });\n    setTimeout(() => setNotification(null), 5000);\n  };\n\n  // Handle login\n  const handleLogin = () => {\n    // For demo purposes, we're using a simplified approach\n    const token = prompt('Enter your GitHub token:');\n    if (token) {\n      localStorage.setItem('github_token', token);\n      initializeGitHub(token);\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('github_token');\n    setAuthenticated(false);\n    setUser(null);\n    setOctokit(null);\n    setRepositories([]);\n    setSelectedRepo(null);\n    setContents([]);\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Git Helper Web\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), authenticated ? /*#__PURE__*/_jsxDEV(UserInfo, {\n        children: [user && /*#__PURE__*/_jsxDEV(UserName, {\n          children: user.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(LoginButton, {\n        onClick: handleLogin,\n        children: \"Login with GitHub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), authenticated ? /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        children: [/*#__PURE__*/_jsxDEV(SidebarHeader, {\n          children: \"Repositories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RepoList, {\n          children: repositories.map(repo => /*#__PURE__*/_jsxDEV(RepoItem, {\n            selected: selectedRepo && selectedRepo.id === repo.id,\n            onClick: () => handleSelectRepository(repo),\n            children: repo.name\n          }, repo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        children: selectedRepo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(RepositoryHeader, {\n            children: [/*#__PURE__*/_jsxDEV(RepoName, {\n              children: selectedRepo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(BranchSelector, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Branch:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: currentBranch,\n                onChange: e => handleSelectBranch(e.target.value),\n                children: branches.map(branch => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: branch,\n                  children: branch\n                }, branch, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(PathNavigator, {\n            children: [/*#__PURE__*/_jsxDEV(PathItem, {\n              onClick: () => loadRepositoryContents(selectedRepo, '', currentBranch),\n              children: \"Root\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 19\n            }, this), currentPath !== '/' && currentPath.split('/').filter(Boolean).map((part, index, array) => {\n              const path = array.slice(0, index + 1).join('/');\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(PathSeparator, {\n                  children: \"/\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(PathItem, {\n                  onClick: () => loadRepositoryContents(selectedRepo, path, currentBranch),\n                  children: part\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 25\n                }, this)]\n              }, path, true, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 23\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FileExplorer, {\n            children: contents.map(item => /*#__PURE__*/_jsxDEV(FileItem, {\n              onClick: () => handleNavigate(item),\n              children: [/*#__PURE__*/_jsxDEV(FileIcon, {\n                children: item.type === 'dir' ? '📁' : '📄'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(FileName, {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 23\n              }, this)]\n            }, item.sha, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DropZone, {\n            onDragOver: handleDragOver,\n            onDrop: handleDrop,\n            children: /*#__PURE__*/_jsxDEV(DropZoneText, {\n              children: \"Drop files here to upload to current directory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(WelcomeMessage, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select a Repository\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose a repository from the sidebar to get started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WelcomeMessage, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to Git Helper Web\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please login with GitHub to get started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n        onClick: handleLogin,\n        children: \"Login with GitHub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 9\n    }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n      type: notification.type,\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 9\n    }, this), showUploadModal && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upload Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n            onClick: () => setShowUploadModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Files to upload:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FileList, {\n            children: uploadFiles.map((file, index) => /*#__PURE__*/_jsxDEV(FileListItem, {\n              children: [file.name, \" (\", (file.size / 1024).toFixed(2), \" KB)\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CommitMessageInput, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Commit message:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: commitMessage,\n              onChange: e => setCommitMessage(e.target.value),\n              placeholder: \"Enter commit message...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(CancelButton, {\n            onClick: () => setShowUploadModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n            onClick: handleUploadFiles,\n            children: \"Commit Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 388,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"akxIcS7n/dZWatwv3tAmITdfwDU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Octokit","AppContainer","Header","Title","UserInfo","UserName","LoginButton","LogoutButton","MainContent","Sidebar","SidebarHeader","RepoList","RepoItem","Content","RepositoryHeader","RepoName","BranchSelector","PathNavigator","PathItem","PathSeparator","FileExplorer","FileItem","FileIcon","FileName","DropZone","DropZoneText","WelcomeMessage","Notification","Modal","ModalContent","ModalHeader","CloseButton","ModalBody","FileList","FileListItem","CommitMessageInput","ModalFooter","CancelButton","UploadButton","jsxDEV","_jsxDEV","Fragment","_Fragment","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","App","_s","authenticated","setAuthenticated","octokit","setOctokit","user","setUser","repositories","setRepositories","selectedRepo","setSelectedRepo","currentPath","setCurrentPath","contents","setContents","branches","setBranches","currentBranch","setCurrentBranch","commitMessage","setCommitMessage","notification","setNotification","uploadFiles","setUploadFiles","showUploadModal","setShowUploadModal","token","localStorage","getItem","initializeGitHub","octokitInstance","auth","data","userData","users","getAuthenticated","loadUserRepositories","showNotification","login","error","console","removeItem","repos","listForAuthenticatedUser","sort","per_page","loadRepositoryContents","repo","path","branch","contentsData","getContent","owner","name","ref","Array","isArray","branchesData","listBranches","map","b","handleSelectRepository","handleSelectBranch","handleNavigate","item","type","fileData","encoding","isImageFile","content","atob","log","imageUrl","filename","imageExtensions","some","ext","toLowerCase","endsWith","handleDrop","e","preventDefault","stopPropagation","files","dataTransfer","items","i","length","kind","file","getAsFile","push","handleDragOver","handleUploadFiles","trim","refData","git","getRef","latestCommitSha","object","sha","commitData","getCommit","commit_sha","baseTreeSha","tree","fileBlobs","Promise","all","readFileAsBase64","blobData","createBlob","mode","treeData","createTree","base_tree","newCommitData","createCommit","message","parents","updateRef","resolve","reject","reader","FileReader","onload","base64","result","split","onerror","setTimeout","readyState","Error","readAsDataURL","handleLogin","prompt","setItem","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","selected","id","value","onChange","target","filter","Boolean","part","index","array","slice","join","onDragOver","onDrop","size","toFixed","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/aruat/OneDrive/Desktop/git-Drag-Drop/browser-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Octokit } from '@octokit/rest';\r\nimport {\r\n  AppContainer,\r\n  Header,\r\n  Title,\r\n  UserInfo,\r\n  UserName,\r\n  LoginButton,\r\n  LogoutButton,\r\n  MainContent,\r\n  Sidebar,\r\n  SidebarHeader,\r\n  RepoList,\r\n  RepoItem,\r\n  Content,\r\n  RepositoryHeader,\r\n  RepoName,\r\n  BranchSelector,\r\n  PathNavigator,\r\n  PathItem,\r\n  PathSeparator,\r\n  FileExplorer,\r\n  FileItem,\r\n  FileIcon,\r\n  FileName,\r\n  DropZone,\r\n  DropZoneText,\r\n  WelcomeMessage,\r\n  Notification,\r\n  Modal,\r\n  ModalContent,\r\n  ModalHeader,\r\n  CloseButton,\r\n  ModalBody,\r\n  FileList,\r\n  FileListItem,\r\n  CommitMessageInput,\r\n  ModalFooter,\r\n  CancelButton,\r\n  UploadButton\r\n} from './styles/StyledComponents';\r\n\r\n// GitHub OAuth App credentials would normally be stored securely\r\n// For demo purposes, we're using placeholder values\r\nconst GITHUB_CLIENT_ID = '';\r\nconst GITHUB_CLIENT_SECRET = 'YOUR_GITHUB_CLIENT_SECRET';\r\n\r\nconst App = () => {\r\n  // State variables\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  const [octokit, setOctokit] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [repositories, setRepositories] = useState([]);\r\n  const [selectedRepo, setSelectedRepo] = useState(null);\r\n  const [currentPath, setCurrentPath] = useState('/');\r\n  const [contents, setContents] = useState([]);\r\n  const [branches, setBranches] = useState([]);\r\n  const [currentBranch, setCurrentBranch] = useState('main');\r\n  const [commitMessage, setCommitMessage] = useState('');\r\n  const [notification, setNotification] = useState(null);\r\n  const [uploadFiles, setUploadFiles] = useState([]);\r\n  const [showUploadModal, setShowUploadModal] = useState(false);\r\n\r\n  // Initialize GitHub on component mount\r\n  useEffect(() => {\r\n    // Check if we have a token in localStorage\r\n    const token = localStorage.getItem('github_token');\r\n    \r\n    if (token) {\r\n      initializeGitHub(token);\r\n    }\r\n  }, []);\r\n\r\n  // Initialize GitHub with token\r\n  const initializeGitHub = async (token) => {\r\n    try {\r\n      const octokitInstance = new Octokit({\r\n        auth: token\r\n      });\r\n      \r\n      setOctokit(octokitInstance);\r\n      \r\n      // Get authenticated user\r\n      const { data: userData } = await octokitInstance.users.getAuthenticated();\r\n      setUser(userData);\r\n      setAuthenticated(true);\r\n      \r\n      // Load user repositories\r\n      await loadUserRepositories(octokitInstance);\r\n      \r\n      showNotification('success', `Logged in as ${userData.login}`);\r\n    } catch (error) {\r\n      console.error('Authentication error:', error);\r\n      localStorage.removeItem('github_token');\r\n      setAuthenticated(false);\r\n      showNotification('error', 'Authentication failed');\r\n    }\r\n  };\r\n\r\n  // Load user repositories\r\n  const loadUserRepositories = async (octokitInstance) => {\r\n    try {\r\n      const { data: repos } = await octokitInstance.repos.listForAuthenticatedUser({\r\n        sort: 'updated',\r\n        per_page: 100\r\n      });\r\n      setRepositories(repos);\r\n    } catch (error) {\r\n      console.error('Error loading repositories:', error);\r\n      showNotification('error', 'Failed to load repositories');\r\n    }\r\n  };\r\n\r\n  // Load repository contents\r\n  const loadRepositoryContents = async (repo, path = '', branch = 'main') => {\r\n    if (!octokit || !repo) return;\r\n    \r\n    try {\r\n      const { data: contentsData } = await octokit.repos.getContent({\r\n        owner: repo.owner.login,\r\n        repo: repo.name,\r\n        path: path || '',\r\n        ref: branch\r\n      });\r\n      \r\n      setContents(Array.isArray(contentsData) ? contentsData : [contentsData]);\r\n      setCurrentPath(path || '/');\r\n      \r\n      // Also load branches\r\n      const { data: branchesData } = await octokit.repos.listBranches({\r\n        owner: repo.owner.login,\r\n        repo: repo.name\r\n      });\r\n      \r\n      setBranches(branchesData.map(b => b.name));\r\n      setCurrentBranch(branch);\r\n    } catch (error) {\r\n      console.error('Error loading repository contents:', error);\r\n      showNotification('error', 'Failed to load repository contents');\r\n    }\r\n  };\r\n\r\n  // Handle repository selection\r\n  const handleSelectRepository = async (repo) => {\r\n    setSelectedRepo(repo);\r\n    await loadRepositoryContents(repo);\r\n  };\r\n\r\n  // Handle branch selection\r\n  const handleSelectBranch = async (branch) => {\r\n    if (selectedRepo) {\r\n      await loadRepositoryContents(selectedRepo, currentPath, branch);\r\n    }\r\n  };\r\n\r\n  // Handle directory navigation\r\n  const handleNavigate = async (item) => {\r\n    if (item.type === 'dir') {\r\n      await loadRepositoryContents(selectedRepo, item.path, currentBranch);\r\n    } else {\r\n      // View file content\r\n      try {\r\n        const { data: fileData } = await octokit.repos.getContent({\r\n          owner: selectedRepo.owner.login,\r\n          repo: selectedRepo.name,\r\n          path: item.path,\r\n          ref: currentBranch\r\n        });\r\n        \r\n        // For binary files, fileData.content will be base64 encoded\r\n        // For text files, we can decode and display\r\n        if (fileData.encoding === 'base64' && !isImageFile(fileData.name)) {\r\n          const content = atob(fileData.content);\r\n          // Here you would display the file content in a modal or viewer\r\n          console.log('File content:', content);\r\n          showNotification('info', `Viewing file: ${item.name}`);\r\n        } else if (isImageFile(fileData.name)) {\r\n          // Handle image files\r\n          const imageUrl = `data:image/png;base64,${fileData.content}`;\r\n          // Display image in a modal or viewer\r\n          console.log('Image URL:', imageUrl);\r\n          showNotification('info', `Viewing image: ${item.name}`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading file content:', error);\r\n        showNotification('error', 'Failed to load file content');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Check if file is an image\r\n  const isImageFile = (filename) => {\r\n    const imageExtensions = ['.png', '.jpg', '.jpeg', '.gif', '.svg', '.webp'];\r\n    return imageExtensions.some(ext => filename.toLowerCase().endsWith(ext));\r\n  };\r\n\r\n  // Handle file upload via drag and drop\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    if (!authenticated || !selectedRepo) {\r\n      showNotification('error', 'Please select a repository first');\r\n      return;\r\n    }\r\n    \r\n    const files = [];\r\n    if (e.dataTransfer.items) {\r\n      for (let i = 0; i < e.dataTransfer.items.length; i++) {\r\n        if (e.dataTransfer.items[i].kind === 'file') {\r\n          const file = e.dataTransfer.items[i].getAsFile();\r\n          files.push(file);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < e.dataTransfer.files.length; i++) {\r\n        files.push(e.dataTransfer.files[i]);\r\n      }\r\n    }\r\n    \r\n    if (files.length > 0) {\r\n      setUploadFiles(files);\r\n      setShowUploadModal(true);\r\n    }\r\n  };\r\n\r\n  // Handle drag over\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n\r\n  // Handle file upload and commit\r\n  const handleUploadFiles = async () => {\r\n    if (!commitMessage.trim()) {\r\n      showNotification('error', 'Please enter a commit message');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Get the latest commit SHA for the branch\r\n      const { data: refData } = await octokit.git.getRef({\r\n        owner: selectedRepo.owner.login,\r\n        repo: selectedRepo.name,\r\n        ref: `heads/${currentBranch}`\r\n      });\r\n      \r\n      const latestCommitSha = refData.object.sha;\r\n      \r\n      // Get the base tree\r\n      const { data: commitData } = await octokit.git.getCommit({\r\n        owner: selectedRepo.owner.login,\r\n        repo: selectedRepo.name,\r\n        commit_sha: latestCommitSha\r\n      });\r\n      \r\n      const baseTreeSha = commitData.tree.sha;\r\n      \r\n      // Create blobs for each file\r\n      const fileBlobs = await Promise.all(uploadFiles.map(async (file) => {\r\n        // Read file content\r\n        const content = await readFileAsBase64(file);\r\n        \r\n        // Create blob\r\n        const { data: blobData } = await octokit.git.createBlob({\r\n          owner: selectedRepo.owner.login,\r\n          repo: selectedRepo.name,\r\n          content: content,\r\n          encoding: 'base64'\r\n        });\r\n        \r\n        return {\r\n          path: currentPath === '/' ? file.name : `${currentPath}/${file.name}`,\r\n          mode: '100644', // Regular file\r\n          type: 'blob',\r\n          sha: blobData.sha\r\n        };\r\n      }));\r\n      \r\n      // Create tree\r\n      const { data: treeData } = await octokit.git.createTree({\r\n        owner: selectedRepo.owner.login,\r\n        repo: selectedRepo.name,\r\n        base_tree: baseTreeSha,\r\n        tree: fileBlobs\r\n      });\r\n      \r\n      // Create commit\r\n      const { data: newCommitData } = await octokit.git.createCommit({\r\n        owner: selectedRepo.owner.login,\r\n        repo: selectedRepo.name,\r\n        message: commitMessage,\r\n        tree: treeData.sha,\r\n        parents: [latestCommitSha]\r\n      });\r\n      \r\n      // Update branch reference\r\n      await octokit.git.updateRef({\r\n        owner: selectedRepo.owner.login,\r\n        repo: selectedRepo.name,\r\n        ref: `heads/${currentBranch}`,\r\n        sha: newCommitData.sha\r\n      });\r\n      \r\n      // Refresh contents\r\n      await loadRepositoryContents(selectedRepo, currentPath, currentBranch);\r\n      \r\n      // Close modal and clear state\r\n      setShowUploadModal(false);\r\n      setUploadFiles([]);\r\n      setCommitMessage('');\r\n      \r\n      showNotification('success', `Successfully uploaded ${uploadFiles.length} file(s)`);\r\n    } catch (error) {\r\n      console.error('Error uploading files:', error);\r\n      showNotification('error', 'Failed to upload files');\r\n    }\r\n  };\r\n\r\n  // Read file as base64\r\n  // Improved readFileAsBase64 function with better error handling\r\nconst readFileAsBase64 = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      const reader = new FileReader();\r\n      \r\n      reader.onload = () => {\r\n        try {\r\n          // Remove the data URL prefix (e.g., \"data:application/pdf;base64,\")\r\n          const base64 = reader.result.split(',')[1];\r\n          resolve(base64);\r\n        } catch (error) {\r\n          console.error('Error processing file data:', error);\r\n          reject(error);\r\n        }\r\n      };\r\n      \r\n      reader.onerror = (error) => {\r\n        console.error('FileReader error:', error);\r\n        reject(error);\r\n      };\r\n      \r\n      // Add a timeout in case the read operation hangs\r\n      setTimeout(() => {\r\n        if (reader.readyState !== 2) {\r\n          reject(new Error('FileReader timeout'));\r\n        }\r\n      }, 10000);\r\n      \r\n      reader.readAsDataURL(file);\r\n    } catch (error) {\r\n      console.error('Error setting up FileReader:', error);\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\n\r\n  // Show notification\r\n  const showNotification = (type, message) => {\r\n    setNotification({ type, message });\r\n    setTimeout(() => setNotification(null), 5000);\r\n  };\r\n\r\n  // Handle login\r\n  const handleLogin = () => {\r\n    // For demo purposes, we're using a simplified approach\r\n    const token = prompt('Enter your GitHub token:');\r\n    if (token) {\r\n      localStorage.setItem('github_token', token);\r\n      initializeGitHub(token);\r\n    }\r\n  };\r\n\r\n  // Handle logout\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('github_token');\r\n    setAuthenticated(false);\r\n    setUser(null);\r\n    setOctokit(null);\r\n    setRepositories([]);\r\n    setSelectedRepo(null);\r\n    setContents([]);\r\n  };\r\n\r\n  return (\r\n    <AppContainer>\r\n      <Header>\r\n        <Title>Git Helper Web</Title>\r\n        {authenticated ? (\r\n          <UserInfo>\r\n            {user && <UserName>{user.login}</UserName>}\r\n            <LogoutButton onClick={handleLogout}>Logout</LogoutButton>\r\n          </UserInfo>\r\n        ) : (\r\n          <LoginButton onClick={handleLogin}>Login with GitHub</LoginButton>\r\n        )}\r\n      </Header>\r\n\r\n      {authenticated ? (\r\n        <MainContent>\r\n          <Sidebar>\r\n            <SidebarHeader>Repositories</SidebarHeader>\r\n            <RepoList>\r\n              {repositories.map(repo => (\r\n                <RepoItem \r\n                  key={repo.id} \r\n                  selected={selectedRepo && selectedRepo.id === repo.id}\r\n                  onClick={() => handleSelectRepository(repo)}\r\n                >\r\n                  {repo.name}\r\n                </RepoItem>\r\n              ))}\r\n            </RepoList>\r\n          </Sidebar>\r\n\r\n          <Content>\r\n            {selectedRepo ? (\r\n              <>\r\n                <RepositoryHeader>\r\n                  <RepoName>{selectedRepo.name}</RepoName>\r\n                  <BranchSelector>\r\n                    <label>Branch:</label>\r\n                    <select \r\n                      value={currentBranch}\r\n                      onChange={(e) => handleSelectBranch(e.target.value)}\r\n                    >\r\n                      {branches.map(branch => (\r\n                        <option key={branch} value={branch}>{branch}</option>\r\n                      ))}\r\n                    </select>\r\n                  </BranchSelector>\r\n                </RepositoryHeader>\r\n\r\n                <PathNavigator>\r\n                  <PathItem onClick={() => loadRepositoryContents(selectedRepo, '', currentBranch)}>\r\n                    Root\r\n                  </PathItem>\r\n                  {currentPath !== '/' && currentPath.split('/').filter(Boolean).map((part, index, array) => {\r\n                    const path = array.slice(0, index + 1).join('/');\r\n                    return (\r\n                      <React.Fragment key={path}>\r\n                        <PathSeparator>/</PathSeparator>\r\n                        <PathItem onClick={() => loadRepositoryContents(selectedRepo, path, currentBranch)}>\r\n                          {part}\r\n                        </PathItem>\r\n                      </React.Fragment>\r\n                    );\r\n                  })}\r\n                </PathNavigator>\r\n\r\n                <FileExplorer>\r\n                  {contents.map(item => (\r\n                    <FileItem \r\n                      key={item.sha} \r\n                      onClick={() => handleNavigate(item)}\r\n                    >\r\n                      <FileIcon>{item.type === 'dir' ? '📁' : '📄'}</FileIcon>\r\n                      <FileName>{item.name}</FileName>\r\n                    </FileItem>\r\n                  ))}\r\n                </FileExplorer>\r\n\r\n                <DropZone\r\n                  onDragOver={handleDragOver}\r\n                  onDrop={handleDrop}\r\n                >\r\n                  <DropZoneText>Drop files here to upload to current directory</DropZoneText>\r\n                </DropZone>\r\n              </>\r\n            ) : (\r\n              <WelcomeMessage>\r\n                <h2>Select a Repository</h2>\r\n                <p>Choose a repository from the sidebar to get started</p>\r\n              </WelcomeMessage>\r\n            )}\r\n          </Content>\r\n        </MainContent>\r\n      ) : (\r\n        <WelcomeMessage>\r\n          <h2>Welcome to Git Helper Web</h2>\r\n          <p>Please login with GitHub to get started</p>\r\n          <LoginButton onClick={handleLogin}>Login with GitHub</LoginButton>\r\n        </WelcomeMessage>\r\n      )}\r\n\r\n      {notification && (\r\n        <Notification type={notification.type}>\r\n          {notification.message}\r\n        </Notification>\r\n      )}\r\n\r\n      {showUploadModal && (\r\n        <Modal>\r\n          <ModalContent>\r\n            <ModalHeader>\r\n              <h3>Upload Files</h3>\r\n              <CloseButton onClick={() => setShowUploadModal(false)}>×</CloseButton>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <h4>Files to upload:</h4>\r\n              <FileList>\r\n                {uploadFiles.map((file, index) => (\r\n                  <FileListItem key={index}>\r\n                    {file.name} ({(file.size / 1024).toFixed(2)} KB)\r\n                  </FileListItem>\r\n                ))}\r\n              </FileList>\r\n              <CommitMessageInput>\r\n                <label>Commit message:</label>\r\n                <textarea\r\n                  value={commitMessage}\r\n                  onChange={(e) => setCommitMessage(e.target.value)}\r\n                  placeholder=\"Enter commit message...\"\r\n                />\r\n              </CommitMessageInput>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <CancelButton onClick={() => setShowUploadModal(false)}>Cancel</CancelButton>\r\n              <UploadButton onClick={handleUploadFiles}>Commit Changes</UploadButton>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n    </AppContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}