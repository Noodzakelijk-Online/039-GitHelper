{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/git-helper-fixed/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Octokit } from '@octokit/rest';\nimport { AppContainer, Header, Title, UserInfo, UserName, LoginButton, LogoutButton, MainContent, Sidebar, SidebarHeader, RepoList, RepoItem, Content, RepositoryHeader, RepoName, BranchSelector, PathNavigator, PathItem, PathSeparator, FileExplorer, FileItem, FileIcon, FileName, DropZone, DropZoneText, WelcomeMessage, Notification, Modal, ModalContent, ModalHeader, CloseButton, ModalBody, FileList, FileListItem, CommitMessageInput, ModalFooter, CancelButton, UploadButton } from './styles/StyledComponents';\n\n// GitHub OAuth App credentials would normally be stored securely\n// For demo purposes, we're using placeholder values\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GITHUB_CLIENT_ID = 'Ov23liar9wjLDWrJz1Lx';\nconst GITHUB_CLIENT_SECRET = '501fe2d9197171e5130909d0794f1eb08d57298f';\n\n// Constants for file handling\nconst MAX_FILE_SIZE = 25 * 1024 * 1024; // 25MB per file (GitHub API limit is 100MB but we use 25MB for better performance)\nconst CHUNK_SIZE = 1024 * 1024; // 1MB chunks for large file processing\n\nconst App = () => {\n  _s();\n  // State variables\n  const [authenticated, setAuthenticated] = useState(false);\n  const [octokit, setOctokit] = useState(null);\n  const [user, setUser] = useState(null);\n  const [repositories, setRepositories] = useState([]);\n  const [selectedRepo, setSelectedRepo] = useState(null);\n  const [currentPath, setCurrentPath] = useState('');\n  const [contents, setContents] = useState([]);\n  const [branches, setBranches] = useState([]);\n  const [currentBranch, setCurrentBranch] = useState('main');\n  const [commitMessage, setCommitMessage] = useState('');\n  const [notification, setNotification] = useState(null);\n  const [uploadFiles, setUploadFiles] = useState([]);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n\n  // Initialize GitHub on component mount\n  useEffect(() => {\n    // Check if we have a token in localStorage\n    const token = localStorage.getItem('github_token');\n    if (token) {\n      initializeGitHub(token);\n    }\n  }, []);\n\n  // Initialize GitHub with token\n  const initializeGitHub = async token => {\n    try {\n      const octokitInstance = new Octokit({\n        auth: token\n      });\n      setOctokit(octokitInstance);\n\n      // Get authenticated user\n      const {\n        data: userData\n      } = await octokitInstance.users.getAuthenticated();\n      setUser(userData);\n      setAuthenticated(true);\n\n      // Load user repositories\n      await loadUserRepositories(octokitInstance);\n      showNotification('success', `Logged in as ${userData.login}`);\n    } catch (error) {\n      console.error('Authentication error:', error);\n      localStorage.removeItem('github_token');\n      setAuthenticated(false);\n      showNotification('error', 'Authentication failed');\n    }\n  };\n\n  // Load user repositories\n  const loadUserRepositories = async octokitInstance => {\n    try {\n      const {\n        data: repos\n      } = await octokitInstance.repos.listForAuthenticatedUser({\n        sort: 'updated',\n        per_page: 100\n      });\n      setRepositories(repos);\n    } catch (error) {\n      console.error('Error loading repositories:', error);\n      showNotification('error', 'Failed to load repositories');\n    }\n  };\n\n  // Utility function to normalize paths\n  const normalizePath = path => {\n    if (!path || path === '/') return '';\n\n    // Remove leading and trailing slashes, then ensure no double slashes\n    const normalized = path.replace(/^\\/+|\\/+$/g, '').replace(/\\/+/g, '/');\n    return normalized;\n  };\n\n  // Utility function to join paths properly\n  const joinPaths = (...paths) => {\n    const filtered = paths.filter(p => p && p !== '/');\n    if (filtered.length === 0) return '';\n    const joined = filtered.join('/').replace(/\\/+/g, '/');\n    return normalizePath(joined);\n  };\n\n  // Load repository contents with improved path handling\n  const loadRepositoryContents = async (repo, path = '', branch = 'main') => {\n    if (!octokit || !repo) return;\n    try {\n      // Clear existing contents first to ensure UI updates\n      setContents([]);\n\n      // Normalize the path to prevent malformed path errors\n      const normalizedPath = normalizePath(path);\n      console.log('Loading contents for path:', normalizedPath);\n      const {\n        data: contentsData\n      } = await octokit.repos.getContent({\n        owner: repo.owner.login,\n        repo: repo.name,\n        path: normalizedPath,\n        ref: branch,\n        // Add a cache-busting parameter\n        headers: {\n          'If-None-Match': '' // Prevents caching\n        }\n      });\n      setContents(Array.isArray(contentsData) ? contentsData : [contentsData]);\n      setCurrentPath(normalizedPath);\n\n      // Also load branches\n      const {\n        data: branchesData\n      } = await octokit.repos.listBranches({\n        owner: repo.owner.login,\n        repo: repo.name\n      });\n      setBranches(branchesData.map(b => b.name));\n      setCurrentBranch(branch);\n      return true; // Indicate successful loading\n    } catch (error) {\n      console.error('Error loading repository contents:', error);\n\n      // Provide more specific error messages\n      if (error.status === 404) {\n        showNotification('error', 'Path not found in repository');\n      } else if (error.status === 403) {\n        showNotification('error', 'Access denied - check repository permissions');\n      } else {\n        showNotification('error', `Failed to load repository contents: ${error.message}`);\n      }\n      return false;\n    }\n  };\n\n  // Handle repository selection\n  const handleSelectRepository = async repo => {\n    setSelectedRepo(repo);\n    await loadRepositoryContents(repo);\n  };\n\n  // Handle branch selection\n  const handleSelectBranch = async branch => {\n    if (selectedRepo) {\n      await loadRepositoryContents(selectedRepo, currentPath, branch);\n    }\n  };\n\n  // Handle directory navigation\n  const handleNavigate = async item => {\n    if (item.type === 'dir') {\n      await loadRepositoryContents(selectedRepo, item.path, currentBranch);\n    } else {\n      // View file content\n      try {\n        const {\n          data: fileData\n        } = await octokit.repos.getContent({\n          owner: selectedRepo.owner.login,\n          repo: selectedRepo.name,\n          path: item.path,\n          ref: currentBranch\n        });\n\n        // For binary files, fileData.content will be base64 encoded\n        // For text files, we can decode and display\n        if (fileData.encoding === 'base64' && !isImageFile(fileData.name)) {\n          const content = atob(fileData.content);\n          // Here you would display the file content in a modal or viewer\n          console.log('File content:', content);\n          showNotification('info', `Viewing file: ${item.name}`);\n        } else if (isImageFile(fileData.name)) {\n          // Handle image files\n          const imageUrl = `data:image/png;base64,${fileData.content}`;\n          // Display image in a modal or viewer\n          console.log('Image URL:', imageUrl);\n          showNotification('info', `Viewing image: ${item.name}`);\n        }\n      } catch (error) {\n        console.error('Error loading file content:', error);\n        showNotification('error', 'Failed to load file content');\n      }\n    }\n  };\n\n  // Check if file is an image\n  const isImageFile = filename => {\n    const imageExtensions = ['.png', '.jpg', '.jpeg', '.gif', '.svg', '.webp'];\n    return imageExtensions.some(ext => filename.toLowerCase().endsWith(ext));\n  };\n\n  // Validate file before upload\n  const validateFile = file => {\n    const errors = [];\n\n    // Check file size\n    if (file.size > MAX_FILE_SIZE) {\n      errors.push(`File \"${file.name}\" is too large (${(file.size / 1024 / 1024).toFixed(2)}MB). Maximum size is ${MAX_FILE_SIZE / 1024 / 1024}MB.`);\n    }\n\n    // Check for invalid characters in filename\n    const invalidChars = /[<>:\"|?*\\x00-\\x1f]/;\n    if (invalidChars.test(file.name)) {\n      errors.push(`File \"${file.name}\" contains invalid characters.`);\n    }\n    return errors;\n  };\n\n  // Handle file upload via drag and drop\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!authenticated || !selectedRepo) {\n      showNotification('error', 'Please select a repository first');\n      return;\n    }\n    const files = [];\n    const errors = [];\n    if (e.dataTransfer.items) {\n      for (let i = 0; i < e.dataTransfer.items.length; i++) {\n        if (e.dataTransfer.items[i].kind === 'file') {\n          const file = e.dataTransfer.items[i].getAsFile();\n          const fileErrors = validateFile(file);\n          if (fileErrors.length > 0) {\n            errors.push(...fileErrors);\n          } else {\n            files.push(file);\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < e.dataTransfer.files.length; i++) {\n        const file = e.dataTransfer.files[i];\n        const fileErrors = validateFile(file);\n        if (fileErrors.length > 0) {\n          errors.push(...fileErrors);\n        } else {\n          files.push(file);\n        }\n      }\n    }\n    if (errors.length > 0) {\n      showNotification('error', errors.join(' '));\n      return;\n    }\n    if (files.length > 0) {\n      setUploadFiles(files);\n      setShowUploadModal(true);\n    }\n  };\n\n  // Handle drag over\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  // Improved file reading with chunked processing for large files\n  const readFileAsBase64 = file => {\n    return new Promise((resolve, reject) => {\n      try {\n        const reader = new FileReader();\n        reader.onload = () => {\n          try {\n            // Remove the data URL prefix (e.g., \"data:application/pdf;base64,\")\n            const base64 = reader.result.split(',')[1];\n            resolve(base64);\n          } catch (error) {\n            console.error('Error processing file data:', error);\n            reject(error);\n          }\n        };\n        reader.onerror = error => {\n          console.error('FileReader error:', error);\n          reject(error);\n        };\n\n        // Add a timeout for large files\n        const timeout = Math.max(30000, file.size / 1024); // 30s minimum, 1s per KB\n        setTimeout(() => {\n          if (reader.readyState !== 2) {\n            reader.abort();\n            reject(new Error('FileReader timeout - file may be too large'));\n          }\n        }, timeout);\n        reader.readAsDataURL(file);\n      } catch (error) {\n        console.error('Error setting up FileReader:', error);\n        reject(error);\n      }\n    });\n  };\n\n  // Handle file upload and commit with improved error handling\n  const handleUploadFiles = async () => {\n    if (!commitMessage.trim()) {\n      showNotification('error', 'Please enter a commit message');\n      return;\n    }\n    setIsUploading(true);\n    setUploadProgress(0);\n    try {\n      // Get the latest commit SHA for the branch\n      const {\n        data: refData\n      } = await octokit.git.getRef({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        ref: `heads/${currentBranch}`\n      });\n      const latestCommitSha = refData.object.sha;\n\n      // Get the base tree\n      const {\n        data: commitData\n      } = await octokit.git.getCommit({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        commit_sha: latestCommitSha\n      });\n      const baseTreeSha = commitData.tree.sha;\n\n      // Create blobs for each file with progress tracking\n      const fileBlobs = [];\n      for (let i = 0; i < uploadFiles.length; i++) {\n        const file = uploadFiles[i];\n        try {\n          // Update progress\n          setUploadProgress((i + 0.5) / uploadFiles.length * 100);\n\n          // Read file content\n          const content = await readFileAsBase64(file);\n\n          // Create blob\n          const {\n            data: blobData\n          } = await octokit.git.createBlob({\n            owner: selectedRepo.owner.login,\n            repo: selectedRepo.name,\n            content: content,\n            encoding: 'base64'\n          });\n\n          // Construct proper file path\n          const filePath = joinPaths(currentPath, file.name);\n          fileBlobs.push({\n            path: filePath,\n            mode: '100644',\n            // Regular file\n            type: 'blob',\n            sha: blobData.sha\n          });\n\n          // Update progress\n          setUploadProgress((i + 1) / uploadFiles.length * 100);\n        } catch (error) {\n          console.error(`Error processing file ${file.name}:`, error);\n          throw new Error(`Failed to process file \"${file.name}\": ${error.message}`);\n        }\n      }\n\n      // Create tree\n      const {\n        data: treeData\n      } = await octokit.git.createTree({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        base_tree: baseTreeSha,\n        tree: fileBlobs\n      });\n\n      // Create commit\n      const {\n        data: newCommitData\n      } = await octokit.git.createCommit({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        message: commitMessage,\n        tree: treeData.sha,\n        parents: [latestCommitSha]\n      });\n\n      // Update branch reference\n      await octokit.git.updateRef({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        ref: `heads/${currentBranch}`,\n        sha: newCommitData.sha,\n        force: true\n      });\n\n      // Refresh contents with retry logic\n      setTimeout(async () => {\n        const success = await loadRepositoryContents(selectedRepo, currentPath, currentBranch);\n        if (!success) {\n          // Try one more time if the first attempt fails\n          setTimeout(() => {\n            loadRepositoryContents(selectedRepo, currentPath, currentBranch);\n          }, 1000);\n        }\n      }, 500);\n\n      // Close modal and clear state\n      setShowUploadModal(false);\n      setUploadFiles([]);\n      setCommitMessage('');\n      setUploadProgress(0);\n      showNotification('success', `Successfully uploaded ${uploadFiles.length} file(s)`);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n\n      // Provide more specific error messages\n      if (error.message.includes('too large')) {\n        showNotification('error', 'One or more files are too large. Please use files smaller than 25MB.');\n      } else if (error.message.includes('malformed')) {\n        showNotification('error', 'Invalid file path. Please check file names for special characters.');\n      } else {\n        showNotification('error', `Upload failed: ${error.message}`);\n      }\n    } finally {\n      setIsUploading(false);\n      setUploadProgress(0);\n    }\n  };\n\n  // Show notification\n  const showNotification = (type, message) => {\n    setNotification({\n      type,\n      message\n    });\n    setTimeout(() => setNotification(null), 5000);\n  };\n\n  // Handle login\n  const handleLogin = () => {\n    // For demo purposes, we're using a simplified approach\n    const token = prompt('Enter your GitHub token:');\n    if (token) {\n      localStorage.setItem('github_token', token);\n      initializeGitHub(token);\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('github_token');\n    setAuthenticated(false);\n    setUser(null);\n    setOctokit(null);\n    setRepositories([]);\n    setSelectedRepo(null);\n    setContents([]);\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Git Helper Web - Fixed Version\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 9\n      }, this), authenticated ? /*#__PURE__*/_jsxDEV(UserInfo, {\n        children: [user && /*#__PURE__*/_jsxDEV(UserName, {\n          children: user.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(LoginButton, {\n        onClick: handleLogin,\n        children: \"Login with GitHub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }, this), authenticated ? /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        children: [/*#__PURE__*/_jsxDEV(SidebarHeader, {\n          children: \"Repositories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RepoList, {\n          children: repositories.map(repo => /*#__PURE__*/_jsxDEV(RepoItem, {\n            selected: selectedRepo && selectedRepo.id === repo.id,\n            onClick: () => handleSelectRepository(repo),\n            children: repo.name\n          }, repo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        children: selectedRepo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(RepositoryHeader, {\n            children: [/*#__PURE__*/_jsxDEV(RepoName, {\n              children: selectedRepo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(BranchSelector, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Branch:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: currentBranch,\n                onChange: e => handleSelectBranch(e.target.value),\n                children: branches.map(branch => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: branch,\n                  children: branch\n                }, branch, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(PathNavigator, {\n            children: [/*#__PURE__*/_jsxDEV(PathItem, {\n              onClick: () => loadRepositoryContents(selectedRepo, '', currentBranch),\n              children: \"Root\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 19\n            }, this), currentPath && currentPath.split('/').filter(Boolean).map((part, index, array) => {\n              const path = array.slice(0, index + 1).join('/');\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(PathSeparator, {\n                  children: \"/\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(PathItem, {\n                  onClick: () => loadRepositoryContents(selectedRepo, path, currentBranch),\n                  children: part\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 25\n                }, this)]\n              }, path, true, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 23\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FileExplorer, {\n            children: contents.map(item => /*#__PURE__*/_jsxDEV(FileItem, {\n              onClick: () => handleNavigate(item),\n              children: [/*#__PURE__*/_jsxDEV(FileIcon, {\n                children: item.type === 'dir' ? '📁' : '📄'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(FileName, {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 23\n              }, this)]\n            }, item.sha, true, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DropZone, {\n            onDragOver: handleDragOver,\n            onDrop: handleDrop,\n            children: /*#__PURE__*/_jsxDEV(DropZoneText, {\n              children: [\"Drop files here to upload to current directory\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Maximum file size: \", MAX_FILE_SIZE / 1024 / 1024, \"MB per file\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(WelcomeMessage, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select a Repository\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose a repository from the sidebar to get started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WelcomeMessage, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to Git Helper Web - Fixed Version\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please login with GitHub to get started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n        onClick: handleLogin,\n        children: \"Login with GitHub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 9\n    }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n      type: notification.type,\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 9\n    }, this), showUploadModal && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upload Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n            onClick: () => setShowUploadModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Files to upload:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FileList, {\n            children: uploadFiles.map((file, index) => /*#__PURE__*/_jsxDEV(FileListItem, {\n              children: [file.name, \" (\", (file.size / 1024 / 1024).toFixed(2), \" MB)\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this), isUploading && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '8px'\n              },\n              children: [\"Upload Progress: \", uploadProgress.toFixed(0), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100%',\n                height: '8px',\n                backgroundColor: '#21262d',\n                borderRadius: '4px',\n                overflow: 'hidden'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: `${uploadProgress}%`,\n                  height: '100%',\n                  backgroundColor: '#2ea043',\n                  transition: 'width 0.3s ease'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CommitMessageInput, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Commit message:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: commitMessage,\n              onChange: e => setCommitMessage(e.target.value),\n              placeholder: \"Enter commit message...\",\n              disabled: isUploading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(CancelButton, {\n            onClick: () => setShowUploadModal(false),\n            disabled: isUploading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n            onClick: handleUploadFiles,\n            disabled: isUploading,\n            children: isUploading ? 'Uploading...' : 'Commit Changes'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 519,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"kw84I5gxKU2Y0/yu6fU9Yxt/G6A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Octokit","AppContainer","Header","Title","UserInfo","UserName","LoginButton","LogoutButton","MainContent","Sidebar","SidebarHeader","RepoList","RepoItem","Content","RepositoryHeader","RepoName","BranchSelector","PathNavigator","PathItem","PathSeparator","FileExplorer","FileItem","FileIcon","FileName","DropZone","DropZoneText","WelcomeMessage","Notification","Modal","ModalContent","ModalHeader","CloseButton","ModalBody","FileList","FileListItem","CommitMessageInput","ModalFooter","CancelButton","UploadButton","jsxDEV","_jsxDEV","Fragment","_Fragment","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","MAX_FILE_SIZE","CHUNK_SIZE","App","_s","authenticated","setAuthenticated","octokit","setOctokit","user","setUser","repositories","setRepositories","selectedRepo","setSelectedRepo","currentPath","setCurrentPath","contents","setContents","branches","setBranches","currentBranch","setCurrentBranch","commitMessage","setCommitMessage","notification","setNotification","uploadFiles","setUploadFiles","showUploadModal","setShowUploadModal","uploadProgress","setUploadProgress","isUploading","setIsUploading","token","localStorage","getItem","initializeGitHub","octokitInstance","auth","data","userData","users","getAuthenticated","loadUserRepositories","showNotification","login","error","console","removeItem","repos","listForAuthenticatedUser","sort","per_page","normalizePath","path","normalized","replace","joinPaths","paths","filtered","filter","p","length","joined","join","loadRepositoryContents","repo","branch","normalizedPath","log","contentsData","getContent","owner","name","ref","headers","Array","isArray","branchesData","listBranches","map","b","status","message","handleSelectRepository","handleSelectBranch","handleNavigate","item","type","fileData","encoding","isImageFile","content","atob","imageUrl","filename","imageExtensions","some","ext","toLowerCase","endsWith","validateFile","file","errors","size","push","toFixed","invalidChars","test","handleDrop","e","preventDefault","stopPropagation","files","dataTransfer","items","i","kind","getAsFile","fileErrors","handleDragOver","readFileAsBase64","Promise","resolve","reject","reader","FileReader","onload","base64","result","split","onerror","timeout","Math","max","setTimeout","readyState","abort","Error","readAsDataURL","handleUploadFiles","trim","refData","git","getRef","latestCommitSha","object","sha","commitData","getCommit","commit_sha","baseTreeSha","tree","fileBlobs","blobData","createBlob","filePath","mode","treeData","createTree","base_tree","newCommitData","createCommit","parents","updateRef","force","success","includes","handleLogin","prompt","setItem","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","selected","id","value","onChange","target","Boolean","part","index","array","slice","onDragOver","onDrop","style","marginBottom","width","height","backgroundColor","borderRadius","overflow","transition","placeholder","disabled","_c","$RefreshReg$"],"sources":["/home/ubuntu/git-helper-fixed/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Octokit } from '@octokit/rest';\nimport {\n  AppContainer,\n  Header,\n  Title,\n  UserInfo,\n  UserName,\n  LoginButton,\n  LogoutButton,\n  MainContent,\n  Sidebar,\n  SidebarHeader,\n  RepoList,\n  RepoItem,\n  Content,\n  RepositoryHeader,\n  RepoName,\n  BranchSelector,\n  PathNavigator,\n  PathItem,\n  PathSeparator,\n  FileExplorer,\n  FileItem,\n  FileIcon,\n  FileName,\n  DropZone,\n  DropZoneText,\n  WelcomeMessage,\n  Notification,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  CloseButton,\n  ModalBody,\n  FileList,\n  FileListItem,\n  CommitMessageInput,\n  ModalFooter,\n  CancelButton,\n  UploadButton\n} from './styles/StyledComponents';\n\n// GitHub OAuth App credentials would normally be stored securely\n// For demo purposes, we're using placeholder values\nconst GITHUB_CLIENT_ID = 'Ov23liar9wjLDWrJz1Lx';\nconst GITHUB_CLIENT_SECRET = '501fe2d9197171e5130909d0794f1eb08d57298f';\n\n// Constants for file handling\nconst MAX_FILE_SIZE = 25 * 1024 * 1024; // 25MB per file (GitHub API limit is 100MB but we use 25MB for better performance)\nconst CHUNK_SIZE = 1024 * 1024; // 1MB chunks for large file processing\n\n\n\nconst App = () => {\n  // State variables\n  const [authenticated, setAuthenticated] = useState(false);\n  const [octokit, setOctokit] = useState(null);\n  const [user, setUser] = useState(null);\n  const [repositories, setRepositories] = useState([]);\n  const [selectedRepo, setSelectedRepo] = useState(null);\n  const [currentPath, setCurrentPath] = useState('');\n  const [contents, setContents] = useState([]);\n  const [branches, setBranches] = useState([]);\n  const [currentBranch, setCurrentBranch] = useState('main');\n  const [commitMessage, setCommitMessage] = useState('');\n  const [notification, setNotification] = useState(null);\n  const [uploadFiles, setUploadFiles] = useState([]);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n\n  // Initialize GitHub on component mount\n  useEffect(() => {\n    // Check if we have a token in localStorage\n    const token = localStorage.getItem('github_token');\n    \n    if (token) {\n      initializeGitHub(token);\n    }\n  }, []);\n\n  // Initialize GitHub with token\n  const initializeGitHub = async (token) => {\n    try {\n      const octokitInstance = new Octokit({\n        auth: token\n      });\n      \n      setOctokit(octokitInstance);\n      \n      // Get authenticated user\n      const { data: userData } = await octokitInstance.users.getAuthenticated();\n      setUser(userData);\n      setAuthenticated(true);\n      \n      // Load user repositories\n      await loadUserRepositories(octokitInstance);\n      \n      showNotification('success', `Logged in as ${userData.login}`);\n    } catch (error) {\n      console.error('Authentication error:', error);\n      localStorage.removeItem('github_token');\n      setAuthenticated(false);\n      showNotification('error', 'Authentication failed');\n    }\n  };\n\n  // Load user repositories\n  const loadUserRepositories = async (octokitInstance) => {\n    try {\n      const { data: repos } = await octokitInstance.repos.listForAuthenticatedUser({\n        sort: 'updated',\n        per_page: 100\n      });\n      setRepositories(repos);\n    } catch (error) {\n      console.error('Error loading repositories:', error);\n      showNotification('error', 'Failed to load repositories');\n    }\n  };\n\n  // Utility function to normalize paths\n  const normalizePath = (path) => {\n    if (!path || path === '/') return '';\n    \n    // Remove leading and trailing slashes, then ensure no double slashes\n    const normalized = path.replace(/^\\/+|\\/+$/g, '').replace(/\\/+/g, '/');\n    return normalized;\n  };\n\n  // Utility function to join paths properly\n  const joinPaths = (...paths) => {\n    const filtered = paths.filter(p => p && p !== '/');\n    if (filtered.length === 0) return '';\n    \n    const joined = filtered.join('/').replace(/\\/+/g, '/');\n    return normalizePath(joined);\n  };\n\n  // Load repository contents with improved path handling\n  const loadRepositoryContents = async (repo, path = '', branch = 'main') => {\n    if (!octokit || !repo) return;\n    \n    try {\n      // Clear existing contents first to ensure UI updates\n      setContents([]);\n      \n      // Normalize the path to prevent malformed path errors\n      const normalizedPath = normalizePath(path);\n      \n      console.log('Loading contents for path:', normalizedPath);\n      \n      const { data: contentsData } = await octokit.repos.getContent({\n        owner: repo.owner.login,\n        repo: repo.name,\n        path: normalizedPath,\n        ref: branch,\n        // Add a cache-busting parameter\n        headers: {\n          'If-None-Match': '' // Prevents caching\n        }\n      });\n      \n      setContents(Array.isArray(contentsData) ? contentsData : [contentsData]);\n      setCurrentPath(normalizedPath);\n      \n      // Also load branches\n      const { data: branchesData } = await octokit.repos.listBranches({\n        owner: repo.owner.login,\n        repo: repo.name\n      });\n      \n      setBranches(branchesData.map(b => b.name));\n      setCurrentBranch(branch);\n      \n      return true; // Indicate successful loading\n    } catch (error) {\n      console.error('Error loading repository contents:', error);\n      \n      // Provide more specific error messages\n      if (error.status === 404) {\n        showNotification('error', 'Path not found in repository');\n      } else if (error.status === 403) {\n        showNotification('error', 'Access denied - check repository permissions');\n      } else {\n        showNotification('error', `Failed to load repository contents: ${error.message}`);\n      }\n      return false;\n    }\n  };\n\n\n  // Handle repository selection\n  const handleSelectRepository = async (repo) => {\n    setSelectedRepo(repo);\n    await loadRepositoryContents(repo);\n  };\n\n  // Handle branch selection\n  const handleSelectBranch = async (branch) => {\n    if (selectedRepo) {\n      await loadRepositoryContents(selectedRepo, currentPath, branch);\n    }\n  };\n\n  // Handle directory navigation\n  const handleNavigate = async (item) => {\n    if (item.type === 'dir') {\n      await loadRepositoryContents(selectedRepo, item.path, currentBranch);\n    } else {\n      // View file content\n      try {\n        const { data: fileData } = await octokit.repos.getContent({\n          owner: selectedRepo.owner.login,\n          repo: selectedRepo.name,\n          path: item.path,\n          ref: currentBranch\n        });\n        \n        // For binary files, fileData.content will be base64 encoded\n        // For text files, we can decode and display\n        if (fileData.encoding === 'base64' && !isImageFile(fileData.name)) {\n          const content = atob(fileData.content);\n          // Here you would display the file content in a modal or viewer\n          console.log('File content:', content);\n          showNotification('info', `Viewing file: ${item.name}`);\n        } else if (isImageFile(fileData.name)) {\n          // Handle image files\n          const imageUrl = `data:image/png;base64,${fileData.content}`;\n          // Display image in a modal or viewer\n          console.log('Image URL:', imageUrl);\n          showNotification('info', `Viewing image: ${item.name}`);\n        }\n      } catch (error) {\n        console.error('Error loading file content:', error);\n        showNotification('error', 'Failed to load file content');\n      }\n    }\n  };\n\n  // Check if file is an image\n  const isImageFile = (filename) => {\n    const imageExtensions = ['.png', '.jpg', '.jpeg', '.gif', '.svg', '.webp'];\n    return imageExtensions.some(ext => filename.toLowerCase().endsWith(ext));\n  };\n\n  // Validate file before upload\n  const validateFile = (file) => {\n    const errors = [];\n    \n    // Check file size\n    if (file.size > MAX_FILE_SIZE) {\n      errors.push(`File \"${file.name}\" is too large (${(file.size / 1024 / 1024).toFixed(2)}MB). Maximum size is ${MAX_FILE_SIZE / 1024 / 1024}MB.`);\n    }\n    \n    // Check for invalid characters in filename\n    const invalidChars = /[<>:\"|?*\\x00-\\x1f]/;\n    if (invalidChars.test(file.name)) {\n      errors.push(`File \"${file.name}\" contains invalid characters.`);\n    }\n    \n    return errors;\n  };\n\n  // Handle file upload via drag and drop\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    if (!authenticated || !selectedRepo) {\n      showNotification('error', 'Please select a repository first');\n      return;\n    }\n    \n    const files = [];\n    const errors = [];\n    \n    if (e.dataTransfer.items) {\n      for (let i = 0; i < e.dataTransfer.items.length; i++) {\n        if (e.dataTransfer.items[i].kind === 'file') {\n          const file = e.dataTransfer.items[i].getAsFile();\n          const fileErrors = validateFile(file);\n          \n          if (fileErrors.length > 0) {\n            errors.push(...fileErrors);\n          } else {\n            files.push(file);\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < e.dataTransfer.files.length; i++) {\n        const file = e.dataTransfer.files[i];\n        const fileErrors = validateFile(file);\n        \n        if (fileErrors.length > 0) {\n          errors.push(...fileErrors);\n        } else {\n          files.push(file);\n        }\n      }\n    }\n    \n    if (errors.length > 0) {\n      showNotification('error', errors.join(' '));\n      return;\n    }\n    \n    if (files.length > 0) {\n      setUploadFiles(files);\n      setShowUploadModal(true);\n    }\n  };\n\n  // Handle drag over\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  // Improved file reading with chunked processing for large files\n  const readFileAsBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      try {\n        const reader = new FileReader();\n        \n        reader.onload = () => {\n          try {\n            // Remove the data URL prefix (e.g., \"data:application/pdf;base64,\")\n            const base64 = reader.result.split(',')[1];\n            resolve(base64);\n          } catch (error) {\n            console.error('Error processing file data:', error);\n            reject(error);\n          }\n        };\n        \n        reader.onerror = (error) => {\n          console.error('FileReader error:', error);\n          reject(error);\n        };\n        \n        // Add a timeout for large files\n        const timeout = Math.max(30000, file.size / 1024); // 30s minimum, 1s per KB\n        setTimeout(() => {\n          if (reader.readyState !== 2) {\n            reader.abort();\n            reject(new Error('FileReader timeout - file may be too large'));\n          }\n        }, timeout);\n        \n        reader.readAsDataURL(file);\n      } catch (error) {\n        console.error('Error setting up FileReader:', error);\n        reject(error);\n      }\n    });\n  };\n\n  // Handle file upload and commit with improved error handling\n  const handleUploadFiles = async () => {\n    if (!commitMessage.trim()) {\n      showNotification('error', 'Please enter a commit message');\n      return;\n    }\n    \n    setIsUploading(true);\n    setUploadProgress(0);\n    \n    try {\n      // Get the latest commit SHA for the branch\n      const { data: refData } = await octokit.git.getRef({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        ref: `heads/${currentBranch}`\n      });\n      \n      const latestCommitSha = refData.object.sha;\n      \n      // Get the base tree\n      const { data: commitData } = await octokit.git.getCommit({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        commit_sha: latestCommitSha\n      });\n      \n      const baseTreeSha = commitData.tree.sha;\n      \n      // Create blobs for each file with progress tracking\n      const fileBlobs = [];\n      for (let i = 0; i < uploadFiles.length; i++) {\n        const file = uploadFiles[i];\n        \n        try {\n          // Update progress\n          setUploadProgress(((i + 0.5) / uploadFiles.length) * 100);\n          \n          // Read file content\n          const content = await readFileAsBase64(file);\n          \n          // Create blob\n          const { data: blobData } = await octokit.git.createBlob({\n            owner: selectedRepo.owner.login,\n            repo: selectedRepo.name,\n            content: content,\n            encoding: 'base64'\n          });\n          \n          // Construct proper file path\n          const filePath = joinPaths(currentPath, file.name);\n          \n          fileBlobs.push({\n            path: filePath,\n            mode: '100644', // Regular file\n            type: 'blob',\n            sha: blobData.sha\n          });\n          \n          // Update progress\n          setUploadProgress(((i + 1) / uploadFiles.length) * 100);\n          \n        } catch (error) {\n          console.error(`Error processing file ${file.name}:`, error);\n          throw new Error(`Failed to process file \"${file.name}\": ${error.message}`);\n        }\n      }\n      \n      // Create tree\n      const { data: treeData } = await octokit.git.createTree({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        base_tree: baseTreeSha,\n        tree: fileBlobs\n      });\n      \n      // Create commit\n      const { data: newCommitData } = await octokit.git.createCommit({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        message: commitMessage,\n        tree: treeData.sha,\n        parents: [latestCommitSha]\n      });\n      \n      // Update branch reference\n      await octokit.git.updateRef({\n        owner: selectedRepo.owner.login,\n        repo: selectedRepo.name,\n        ref: `heads/${currentBranch}`,\n        sha: newCommitData.sha,\n        force: true\n      });\n      \n      // Refresh contents with retry logic\n      setTimeout(async () => {\n        const success = await loadRepositoryContents(selectedRepo, currentPath, currentBranch);\n        if (!success) {\n          // Try one more time if the first attempt fails\n          setTimeout(() => {\n            loadRepositoryContents(selectedRepo, currentPath, currentBranch);\n          }, 1000);\n        }\n      }, 500);\n      \n      // Close modal and clear state\n      setShowUploadModal(false);\n      setUploadFiles([]);\n      setCommitMessage('');\n      setUploadProgress(0);\n      \n      showNotification('success', `Successfully uploaded ${uploadFiles.length} file(s)`);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      \n      // Provide more specific error messages\n      if (error.message.includes('too large')) {\n        showNotification('error', 'One or more files are too large. Please use files smaller than 25MB.');\n      } else if (error.message.includes('malformed')) {\n        showNotification('error', 'Invalid file path. Please check file names for special characters.');\n      } else {\n        showNotification('error', `Upload failed: ${error.message}`);\n      }\n    } finally {\n      setIsUploading(false);\n      setUploadProgress(0);\n    }\n  };\n\n\n  // Show notification\n  const showNotification = (type, message) => {\n    setNotification({ type, message });\n    setTimeout(() => setNotification(null), 5000);\n  };\n\n  // Handle login\n  const handleLogin = () => {\n    // For demo purposes, we're using a simplified approach\n    const token = prompt('Enter your GitHub token:');\n    if (token) {\n      localStorage.setItem('github_token', token);\n      initializeGitHub(token);\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('github_token');\n    setAuthenticated(false);\n    setUser(null);\n    setOctokit(null);\n    setRepositories([]);\n    setSelectedRepo(null);\n    setContents([]);\n  };\n\n  return (\n    <AppContainer>\n      <Header>\n        <Title>Git Helper Web - Fixed Version</Title>\n        {authenticated ? (\n          <UserInfo>\n            {user && <UserName>{user.login}</UserName>}\n            <LogoutButton onClick={handleLogout}>Logout</LogoutButton>\n          </UserInfo>\n        ) : (\n          <LoginButton onClick={handleLogin}>Login with GitHub</LoginButton>\n        )}\n      </Header>\n\n      {authenticated ? (\n        <MainContent>\n          <Sidebar>\n            <SidebarHeader>Repositories</SidebarHeader>\n            <RepoList>\n              {repositories.map(repo => (\n                <RepoItem \n                  key={repo.id} \n                  selected={selectedRepo && selectedRepo.id === repo.id}\n                  onClick={() => handleSelectRepository(repo)}\n                >\n                  {repo.name}\n                </RepoItem>\n              ))}\n            </RepoList>\n          </Sidebar>\n\n          <Content>\n            {selectedRepo ? (\n              <>\n                <RepositoryHeader>\n                  <RepoName>{selectedRepo.name}</RepoName>\n                  <BranchSelector>\n                    <label>Branch:</label>\n                    <select \n                      value={currentBranch}\n                      onChange={(e) => handleSelectBranch(e.target.value)}\n                    >\n                      {branches.map(branch => (\n                        <option key={branch} value={branch}>{branch}</option>\n                      ))}\n                    </select>\n                  </BranchSelector>\n                </RepositoryHeader>\n\n                <PathNavigator>\n                  <PathItem onClick={() => loadRepositoryContents(selectedRepo, '', currentBranch)}>\n                    Root\n                  </PathItem>\n                  {currentPath && currentPath.split('/').filter(Boolean).map((part, index, array) => {\n                    const path = array.slice(0, index + 1).join('/');\n                    return (\n                      <React.Fragment key={path}>\n                        <PathSeparator>/</PathSeparator>\n                        <PathItem onClick={() => loadRepositoryContents(selectedRepo, path, currentBranch)}>\n                          {part}\n                        </PathItem>\n                      </React.Fragment>\n                    );\n                  })}\n                </PathNavigator>\n\n                <FileExplorer>\n                  {contents.map(item => (\n                    <FileItem \n                      key={item.sha} \n                      onClick={() => handleNavigate(item)}\n                    >\n                      <FileIcon>{item.type === 'dir' ? '📁' : '📄'}</FileIcon>\n                      <FileName>{item.name}</FileName>\n                    </FileItem>\n                  ))}\n                </FileExplorer>\n\n                <DropZone\n                  onDragOver={handleDragOver}\n                  onDrop={handleDrop}\n                >\n                  <DropZoneText>\n                    Drop files here to upload to current directory\n                    <br />\n                    <small>Maximum file size: {MAX_FILE_SIZE / 1024 / 1024}MB per file</small>\n                  </DropZoneText>\n                </DropZone>\n              </>\n            ) : (\n              <WelcomeMessage>\n                <h2>Select a Repository</h2>\n                <p>Choose a repository from the sidebar to get started</p>\n              </WelcomeMessage>\n            )}\n          </Content>\n        </MainContent>\n      ) : (\n        <WelcomeMessage>\n          <h2>Welcome to Git Helper Web - Fixed Version</h2>\n          <p>Please login with GitHub to get started</p>\n          <LoginButton onClick={handleLogin}>Login with GitHub</LoginButton>\n        </WelcomeMessage>\n      )}\n\n      {notification && (\n        <Notification type={notification.type}>\n          {notification.message}\n        </Notification>\n      )}\n\n      {showUploadModal && (\n        <Modal>\n          <ModalContent>\n            <ModalHeader>\n              <h3>Upload Files</h3>\n              <CloseButton onClick={() => setShowUploadModal(false)}>×</CloseButton>\n            </ModalHeader>\n            <ModalBody>\n              <h4>Files to upload:</h4>\n              <FileList>\n                {uploadFiles.map((file, index) => (\n                  <FileListItem key={index}>\n                    {file.name} ({(file.size / 1024 / 1024).toFixed(2)} MB)\n                  </FileListItem>\n                ))}\n              </FileList>\n              {isUploading && (\n                <div style={{ marginBottom: '20px' }}>\n                  <div style={{ marginBottom: '8px' }}>Upload Progress: {uploadProgress.toFixed(0)}%</div>\n                  <div style={{ \n                    width: '100%', \n                    height: '8px', \n                    backgroundColor: '#21262d', \n                    borderRadius: '4px',\n                    overflow: 'hidden'\n                  }}>\n                    <div style={{ \n                      width: `${uploadProgress}%`, \n                      height: '100%', \n                      backgroundColor: '#2ea043',\n                      transition: 'width 0.3s ease'\n                    }}></div>\n                  </div>\n                </div>\n              )}\n              <CommitMessageInput>\n                <label>Commit message:</label>\n                <textarea\n                  value={commitMessage}\n                  onChange={(e) => setCommitMessage(e.target.value)}\n                  placeholder=\"Enter commit message...\"\n                  disabled={isUploading}\n                />\n              </CommitMessageInput>\n            </ModalBody>\n            <ModalFooter>\n              <CancelButton onClick={() => setShowUploadModal(false)} disabled={isUploading}>\n                Cancel\n              </CancelButton>\n              <UploadButton onClick={handleUploadFiles} disabled={isUploading}>\n                {isUploading ? 'Uploading...' : 'Commit Changes'}\n              </UploadButton>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      )}\n    </AppContainer>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}